this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.CSV=this.recline.Backend.CSV||{};(function(e){"use strict";function o(e){if(e.charAt(e.length-1)!=="\n"){return e}else{return e.substring(0,e.length-1)}}e.__type__="csv";var t=typeof jQuery!=="undefined"&&jQuery.Deferred||_.Deferred;e.fetch=function(n){var r=new t;if(n.file){var i=new FileReader;var s=n.encoding||"UTF-8";i.onload=function(t){var i=e.extractFields(e.parseCSV(t.target.result,n),n);i.useMemoryStore=true;i.metadata={filename:n.file.name};r.resolve(i)};i.onerror=function(e){alert("Failed to load file. Code: "+e.target.error.code)};i.readAsText(n.file,s)}else if(n.data){var o=e.extractFields(e.parseCSV(n.data,n),n);o.useMemoryStore=true;r.resolve(o)}else if(n.url){jQuery.get(n.url).done(function(t){var i=e.extractFields(e.parseCSV(t,n),n);i.useMemoryStore=true;r.resolve(i)})}return r.promise()};e.extractFields=function(e,t){if(t.noHeaderRow!==true&&e.length>0){return{fields:e[0],records:e.slice(1)}}else{return{records:e}}};e.parseCSV=function(e,t){e=o(e);var t=t||{};var i=t.trim===false?false:true;var u=t.delimiter||",";var a=t.quotechar||'"';var f="",l=false,c=false,h="",p=[],d=[],v,m;m=function(e){if(c!==true){if(e===""){e=null}else if(i===true){e=s(e)}if(n.test(e)){e=parseInt(e,10)}else if(r.test(e)){e=parseFloat(e,10)}}return e};for(v=0;v<e.length;v+=1){f=e.charAt(v);if(l===false&&(f===u||f==="\n")){h=m(h);p.push(h);if(f==="\n"){d.push(p);p=[]}h="";c=false}else{if(f!==a){h+=f}else{if(!l){l=true;c=true}else{if(e.charAt(v+1)===a){h+=a;v+=1}else{l=false}}}}}h=m(h);p.push(h);d.push(p);if(t.skipInitialRows)d=d.slice(t.skipInitialRows);return d};e.serializeCSV=function(e,t){var n=null;if(e instanceof Array){n=e}else{n=[];var r=_.pluck(e.fields,"id");n.push(r);_.each(e.records,function(e,t){var i=_.map(r,function(t){return e[t]});n.push(i)})}var t=t||{};var s=t.delimiter||",";var o=t.quotechar||'"';var u="",a="",f="",l="",c,h,p;p=function(e){if(e===null){e=""}else if(typeof e==="string"&&i.test(e)){e=o+e+o}else if(typeof e==="number"){e=e.toString(10)}return e};for(c=0;c<n.length;c+=1){u=n[c];for(h=0;h<u.length;h+=1){a=p(u[h]);if(h===u.length-1){f+=a;l+=f+"\n";f=""}else{f+=a+s}a=""}}return l};var n=/^\d+$/,r=/^\d*\.\d+$|^\d+\.\d*$/,i=/^\s|\s$|,|"|\n/,s=function(){if(String.prototype.trim){return function(e){return e.trim()}}else{return function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}}()})(this.recline.Backend.CSV);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{};(function(e){"use strict";e.__type__="dataproxy";e.dataproxy_url="//jsonpdataproxy.appspot.com";e.timeout=5e3;var t=typeof jQuery!=="undefined"&&jQuery.Deferred||_.Deferred;e.fetch=function(r){var i={url:r.url,"max-results":r.size||r.rows||1e3,type:r.format||""};var s=jQuery.ajax({url:e.dataproxy_url,data:i,dataType:"jsonp"});var o=new t;n(s).done(function(e){if(e.error){o.reject(e.error)}o.resolve({records:e.data,fields:e.fields,useMemoryStore:true})}).fail(function(e){o.reject(e)});return o.promise()};var n=function(n){var r=new t;var i=setTimeout(function(){r.reject({message:"Request Error: Backend did not respond after "+e.timeout/1e3+" seconds"})},e.timeout);n.done(function(e){clearTimeout(i);r.resolve(e)}).fail(function(e){clearTimeout(i);r.reject(e)});return r.promise()}})(this.recline.Backend.DataProxy);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.Memory=this.recline.Backend.Memory||{};(function(e){"use strict";e.__type__="memory";var t=typeof jQuery!=="undefined"&&jQuery.Deferred||_.Deferred;e.Store=function(e,n){var r=this;this.records=e;this.data=this.records;if(n){this.fields=n}else{if(e){this.fields=_.map(e[0],function(e,t){return{id:t,type:"string"}})}}this.update=function(e){_.each(r.records,function(t,n){if(e.id===t.id){r.records[n]=e}})};this.remove=function(e){var t=_.reject(r.records,function(t){return e.id===t.id});this.records=t};this.save=function(e,n){var r=this;var i=new t;_.each(e.updates,function(e){r.update(e)});_.each(e.deletes,function(e){r.remove(e)});i.resolve();return i.promise()},this.query=function(e){var n=new t;var r=e.size||this.records.length;var i=e.from||0;var s=this.records;s=this._applyFilters(s,e);s=this._applyFreeTextQuery(s,e);_.each(e.sort,function(e){var t=e.field;s=_.sortBy(s,function(e){var n=e[t];return n});if(e.order=="desc"){s.reverse()}});var o=this.computeFacets(s,e);var u={total:s.length,hits:s.slice(i,i+r),facets:o};n.resolve(u);return n.promise()};this._applyFilters=function(e,t){function u(e){var t=o[e.field].type||"string";return s[t]}function a(e,t){var n=u(t);var r=n(e[t.field]);var i=n(t.term);return r===i}function f(e,t){var n=u(t);var r=n(e[t.field]);var i=n(t.terms).split(",");return _.indexOf(i,r)>=0}function l(e,t){var n=_.isUndefined(t.from)||t.from===null||t.from==="";var r=_.isUndefined(t.to)||t.to===null||t.to==="";var i=u(t);var s=i(e[t.field]);var o=i(n?"":t.from);var a=i(r?"":t.to);if((!n||!r)&&s===""){return false}return(n||s>=o)&&(r||s<=a)}function c(){}var n=t.filters;var i={term:a,terms:f,range:l,geo_distance:c};var s={integer:function(e){return parseFloat(e,10)},"float":function(e){return parseFloat(e,10)},number:function(e){return parseFloat(e,10)},string:function(e){return e.toString()},date:function(e){return moment(e).valueOf()},datetime:function(e){return(new Date(e)).valueOf()}};var o={};_.each(r.fields,function(e){o[e.id]=e});return _.filter(e,function(e){var t=_.map(n,function(t){return i[t.type](e,t)});return _.all(t,_.identity)})};this._applyFreeTextQuery=function(e,t){if(t.q){var n=t.q.split(" ");var i=_.map(n,function(e){return new RegExp(e.toLowerCase())});e=_.filter(e,function(e){var t=true;_.each(i,function(n){var i=false;_.each(r.fields,function(t){var r=e[t.id];if(r!==null&&r!==undefined){r=r.toString()}else{r=""}i=i||n.test(r.toLowerCase())});t=t&&i});return t})}return e};this.computeFacets=function(e,t){var n={};if(!t.facets){return n}_.each(t.facets,function(e,t){n[t]=(new recline.Model.Facet({id:t})).toJSON();n[t].termsall={}});_.each(e,function(e){_.each(t.facets,function(t,r){var i=t.terms.field;var s=e[i];var o=n[r];if(s){o.termsall[s]=o.termsall[s]?o.termsall[s]+1:1}else{o.missing=o.missing+1}})});_.each(t.facets,function(e,t){var r=n[t];var i=_.map(r.termsall,function(e,t){return{term:t,count:e}});r.terms=_.sortBy(i,function(e){return-e.count});r.terms=r.terms.slice(0,10)});return n}}})(this.recline.Backend.Memory);if(!("indexOf"in Array.prototype)){Array.prototype.indexOf=function(e,t){if(t===undefined)t=0;if(t<0)t+=this.length;if(t<0)t=0;for(var n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1}}if(!("lastIndexOf"in Array.prototype)){Array.prototype.lastIndexOf=function(e,t){if(t===undefined)t=this.length-1;if(t<0)t+=this.length;if(t>this.length-1)t=this.length-1;for(t++;t-->0;)if(t in this&&this[t]===e)return t;return-1}}if(!("forEach"in Array.prototype)){Array.prototype.forEach=function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this)e.call(t,this[n],n,this)}}if(!("map"in Array.prototype)){Array.prototype.map=function(e,t){var n=new Array(this.length);for(var r=0,i=this.length;r<i;r++)if(r in this)n[r]=e.call(t,this[r],r,this);return n}}if(!("filter"in Array.prototype)){Array.prototype.filter=function(e,t){var n=[],r;for(var i=0,s=this.length;i<s;i++)if(i in this&&e.call(t,r=this[i],i,this))n.push(r);return n}}if(!("every"in Array.prototype)){Array.prototype.every=function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&!e.call(t,this[n],n,this))return false;return true}}if(!("some"in Array.prototype)){Array.prototype.some=function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&e.call(t,this[n],n,this))return true;return false}}this.recline=this.recline||{};this.recline.Model=this.recline.Model||{};(function(e){"use strict";var t=typeof jQuery!=="undefined"&&jQuery.Deferred||_.Deferred;e.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){var t=this;_.bindAll(this,"query");this.backend=null;if(this.get("backend")){this.backend=this._backendFromString(this.get("backend"))}else{if(this.get("records")){this.backend=recline.Backend.Memory}}this.fields=new e.FieldList;this.records=new e.RecordList;this._changes={deletes:[],updates:[],creates:[]};this.facets=new e.FacetList;this.recordCount=null;this.queryState=new e.Query;this.queryState.bind("change facet:add",function(){t.query()});this._store=this.backend;this._handleResult=this.backend!=null&&_.has(this.backend,"handleQueryResult")?this.backend.handleQueryResult:this._handleQueryResult;if(this.backend==recline.Backend.Memory){this.fetch()}},sync:function(e,t,n){return this.backend.sync(e,t,n)},fetch:function(){function r(t){var r=e.get("fields")||t.fields;var i=e._normalizeRecordsAndFields(t.records,r);if(t.useMemoryStore){e._store=new recline.Backend.Memory.Store(i.records,i.fields)}e.set(t.metadata);e.fields.reset(i.fields);e.query().done(function(){n.resolve(e)}).fail(function(e){n.reject(e)})}var e=this;var n=new t;if(this.backend!==recline.Backend.Memory){this.backend.fetch(this.toJSON()).done(r).fail(function(e){n.reject(e)})}else{r({records:this.get("records"),fields:this.get("fields"),useMemoryStore:true})}return n.promise()},_normalizeRecordsAndFields:function(e,t){if(!t&&e&&e.length>0){if(e[0]instanceof Array){t=e[0];e=e.slice(1)}else{t=_.map(_.keys(e[0]),function(e){return{id:e}})}}if(t&&t.length>0&&(t[0]===null||typeof t[0]!="object")){var n={};t=_.map(t,function(e,t){if(e===null){e=""}else{e=e.toString()}var r=e.replace(/^\s+|\s+$/g,"");if(r===""){r="_noname_";e=r}while(r in n){n[e]+=1;r=e+n[e]}if(!(e in n)){n[e]=0}return{id:r}})}if(e&&e.length>0&&e[0]instanceof Array){e=_.map(e,function(e){var n={};_.each(t,function(t,r){n[t.id]=e[r]});return n})}return{fields:t,records:e}},save:function(){var e=this;return this._store.save(this._changes,this.toJSON())},query:function(n){var r=this;var i=new t;this.trigger("query:start");if(n){var s=n;if(n instanceof e.Query){s=n.toJSON()}this.queryState.set(s,{silent:true})}var o=this.queryState.toJSON();this._store.query(o,this.toJSON()).done(function(e){r._handleResult(e);r.trigger("query:done");i.resolve(r.records)}).fail(function(e){r.trigger("query:fail",e);i.reject(e)});return i.promise()},_handleQueryResult:function(t){var n=this;n.recordCount=t.total;var r=_.map(t.hits,function(t){var r=new e.Record(t);r.fields=n.fields;r.bind("change",function(e){n._changes.updates.push(e.toJSON())});r.bind("destroy",function(e){n._changes.deletes.push(e.toJSON())});return r});n.records.reset(r);if(t.facets){var i=_.map(t.facets,function(t,n){t.id=n;return new e.Facet(t)});n.facets.reset(i)}},toTemplateJSON:function(){var e=this.toJSON();e.recordCount=this.recordCount;e.fields=this.fields.toJSON();return e},getFieldsSummary:function(){var n=this;var r=new e.Query;r.set({size:0});this.fields.each(function(e){r.addFacet(e.id)});var i=new t;this._store.query(r.toJSON(),this.toJSON()).done(function(t){if(t.facets){_.each(t.facets,function(t,r){t.id=r;var i=new e.Facet(t);n.fields.get(r).facets.reset(i)})}i.resolve(t)});return i.promise()},recordSummary:function(e){return e.summary()},_backendFromString:function(e){var t=null;if(recline&&recline.Backend){_.each(_.keys(recline.Backend),function(n){if(n.toLowerCase()===e.toLowerCase()){t=recline.Backend[n]}})}return t}});e.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(e){var t=this.getFieldValueUnrendered(e);if(e&&!_.isUndefined(e.renderer)){t=e.renderer(t,e,this.toJSON())}return t},getFieldValueUnrendered:function(e){if(!e){return""}var t=this.get(e.id);if(e.deriver){t=e.deriver(t,e,this)}return t},summary:function(e){var t=this;var n='<div class="recline-record-summary">';this.fields.each(function(e){if(e.id!="id"){n+='<div class="'+e.id+'"><strong>'+e.get("label")+"</strong>: "+t.getFieldValue(e)+"</div>"}});n+="</div>";return n},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}});e.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Record});e.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:false},initialize:function(t,n){if("0"in t){throw new Error("Looks like you did not pass a proper hash with id to Field constructor")}if(this.attributes.label===null){this.set({label:this.id})}if(this.attributes.type.toLowerCase()in this._typeMap){this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]}if(n){this.renderer=n.renderer;this.deriver=n.deriver}if(!this.renderer){this.renderer=this.defaultRenderers[this.get("type")]}this.facets=new e.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(e,t,n){return JSON.stringify(e)},geo_point:function(e,t,n){return JSON.stringify(e)},number:function(e,t,n){var r=t.get("format");if(r==="percentage"){return e+"%"}return e},string:function(e,t,n){var r=t.get("format");if(r==="markdown"){if(typeof Showdown!=="undefined"){var i=new Showdown.converter;out=i.makeHtml(e);return out}else{return e}}else if(r=="plain"){return e}else{if(e&&typeof e==="string"){e=e.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')}return e}}}});e.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Field});e.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",from:"",to:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(e){var t=JSON.parse(JSON.stringify(e));if(_.keys(e).length<=3){t=_.defaults(t,this._filterTemplates[e.type])}var n=this.get("filters");n.push(t);this.trigger("change:filters:new-blank")},replaceFilter:function(e){var t=this.get("filters");var n=-1;_.each(this.get("filters"),function(t,r,i){if(e.field==t.field){n=r}});if(n>=0){t.splice(n,1);this.set({filters:t})}this.addFilter(e)},updateFilter:function(e,t){},removeFilter:function(e){var t=this.get("filters");t.splice(e,1);this.set({filters:t});this.trigger("change")},addFacet:function(e,t,n){var r=this.get("facets");if(_.contains(_.keys(r),e)){return}r[e]={terms:{field:e}};if(!_.isUndefined(t)){r[e].terms.size=t}this.set({facets:r},{silent:true});if(!n){this.trigger("facet:add",this)}},addHistogramFacet:function(e){var t=this.get("facets");t[e]={date_histogram:{field:e,interval:"day"}};this.set({facets:t},{silent:true});this.trigger("facet:add",this)},removeFacet:function(e){var t=this.get("facets");if(!_.contains(_.keys(t),e)){return}delete t[e];this.set({facets:t},{silent:true});this.trigger("facet:remove",this)},clearFacets:function(){var e=this.get("facets");_.each(_.keys(e),function(t){delete e[t]});this.trigger("facet:remove",this)},refreshFacets:function(){this.trigger("facet:add",this)}});e.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}});e.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Facet});e.ObjectState=Backbone.Model.extend({})})(this.recline.Model);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.Flot=Backbone.View.extend({template:'     <div class="recline-flot">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(e){var n=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"];_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel");this.needToRedraw=false;this.listenTo(this.model,"change",this.render);this.listenTo(this.model.fields,"reset add",this.render);this.listenTo(this.model.records,"reset add",this.redraw);var r=_.extend({group:null,series:[],graphType:"lines-and-points"},e.state);this.state=new recline.Model.ObjectState(r);this.previousTooltipPoint={x:null,y:null};this.editor=new t.FlotControls({model:this.model,state:this.state.toJSON()});this.listenTo(this.editor.state,"change",function(){n.state.set(n.editor.state.toJSON());n.redraw()});this.elSidebar=this.editor.$el},render:function(){var e=this;var t=this.model.toTemplateJSON();var n=Mustache.render(this.template,t);this.$el.html(n);this.$graph=this.$el.find(".panel.graph");this.$graph.on("plothover",this._toolTip);return this},remove:function(){this.editor.remove();Backbone.View.prototype.remove.apply(this,arguments)},redraw:function(){var t=!jQuery.expr.filters.hidden(this.el);if(!t||this.model.records.length===0){this.needToRedraw=true;return}if(this.state.get("group")&&this.state.get("series")){var n=this.createSeries();var r=this.getGraphOptions(this.state.attributes.graphType,n[0].data.length);this.plot=e.plot(this.$graph,n,r)}},show:function(){if(this.needToRedraw){this.redraw()}},_toolTip:function(t,n,r){if(r){if(this.previousTooltipPoint.x!==r.dataIndex||this.previousTooltipPoint.y!==r.seriesIndex){this.previousTooltipPoint.x=r.dataIndex;this.previousTooltipPoint.y=r.seriesIndex;e("#recline-flot-tooltip").remove();var i=r.datapoint[0].toFixed(2),s=r.datapoint[1].toFixed(2);if(this.state.attributes.graphType==="bars"){i=r.datapoint[1].toFixed(2),s=r.datapoint[0].toFixed(2)}var o=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(i),series:r.series.label,y:s});var u,a;if(this.state.attributes.graphType==="bars"){u=r.pageX+15;a=r.pageY-10}else if(this.state.attributes.graphType==="columns"){u=r.pageX+15;a=r.pageY}else{u=r.pageX+10;a=r.pageY-20}e('<div id="recline-flot-tooltip">'+o+"</div>").css({top:a,left:u}).appendTo("body").fadeIn(200)}}else{e("#recline-flot-tooltip").remove();this.previousTooltipPoint.x=null;this.previousTooltipPoint.y=null}},_xaxisLabel:function(e){if(this._groupFieldIsDateTime()){e=(new Date(parseFloat(e))).toLocaleDateString()}else if(this.xvaluesAreIndex){e=parseInt(e,10);e=this.model.records.models[e].get(this.state.attributes.group)}return e},getGraphOptions:function(e,t){var n=this;var r=n._groupFieldIsDateTime();var i={};if(!r){i.tickFormatter=function(e){var t=n._xaxisLabel(e)||"";if(typeof t!=="string"){t=t.toString()}if(n.state.attributes.graphType!=="bars"&&t.length>10){t=t.slice(0,10)+"..."}return t}}if(this.xvaluesAreIndex){var s=Math.min(this.model.records.length,15);var o=this.model.records.length/s;var u=[];for(var a=0;a<s;a++){u.push(parseInt(a*o,10))}i.ticks=u}else if(r){i.mode="time"}var f={};f.autoscale=true;f.autoscaleMargin=.02;var l={};l.position="ne";var c={};c.hoverable=true;c.clickable=true;c.borderColor="#aaaaaa";c.borderWidth=1;var h={lines:{legend:l,colors:this.graphColors,lines:{show:true},xaxis:i,yaxis:f,grid:c},points:{legend:l,colors:this.graphColors,points:{show:true,hitRadius:5},xaxis:i,yaxis:f,grid:c},"lines-and-points":{legend:l,colors:this.graphColors,points:{show:true,hitRadius:5},lines:{show:true},xaxis:i,yaxis:f,grid:c},bars:{legend:l,colors:this.graphColors,lines:{show:false},xaxis:f,yaxis:i,grid:c,bars:{show:true,horizontal:true,shadowSize:0,align:"center",barWidth:.8}},columns:{legend:l,colors:this.graphColors,lines:{show:false},xaxis:i,yaxis:f,grid:c,bars:{show:true,horizontal:false,shadowSize:0,align:"center",barWidth:.8}}};if(n.state.get("graphOptions")){return _.extend(h[e],n.state.get("graphOptions"))}else{return h[e]}},_groupFieldIsDateTime:function(){var e=this.model.fields.get(this.state.attributes.group);var t=e.get("type");var n=t==="date"||t==="date-time"||t==="time";return n},createSeries:function(){var e=this;e.xvaluesAreIndex=false;var t=[];var n=e.model.fields.get(e.state.attributes.group);var r=e._groupFieldIsDateTime();_.each(this.state.attributes.series,function(i){var s=[];var o=e.model.fields.get(i).get("label");if(r){var u=function(e){var t=moment(String(e));if(t.isValid()){e=t.toDate().getTime()}return e}}else{var a=_.map(e.model.records.models,function(e,t){return e.getFieldValueUnrendered(n)});if(_.all(a,function(e){return!isNaN(parseFloat(e))})){var u=function(e){return parseFloat(e)}}else{e.xvaluesAreIndex=true}}_.each(e.model.records.models,function(t,r){if(e.xvaluesAreIndex){var o=r}else{var o=u(t.getFieldValueUnrendered(n))}var a=e.model.fields.get(i);var f=t.getFieldValueUnrendered(a);if(e.state.attributes.graphType=="bars"){s.push([f,o])}else{s.push([o,f])}});t.push({data:s,label:o,hoverable:true})});return t}});t.FlotControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(e){var t=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"reset add",this.render);this.state=new recline.Model.ObjectState(e.state);this.render()},render:function(){var e=this;var t=this.model.toTemplateJSON();var n=Mustache.render(this.template,t);this.$el.html(n);if(this.state.get("graphType")){this._selectOption(".editor-type",this.state.get("graphType"))}if(this.state.get("group")){this._selectOption(".editor-group",this.state.get("group"))}var r=[""];if(this.state.get("series").length>0){r=this.state.get("series")}_.each(r,function(t,n){e.addSeries(n);e._selectOption(".editor-series.js-series-"+n,t)});return this},_selectOption:function(t,n){var r=this.$el.find(t+" select > option");if(r){r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return false}})}},onEditorSubmit:function(t){var n=this.$el.find(".editor-group select");var r=this;var i=this.$el.find(".editor-series select");var s=i.map(function(){return e(this).val()});var o={series:e.makeArray(s),group:this.$el.find(".editor-group select").val(),graphType:this.$el.find(".editor-type select").val()};this.state.set(o)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON());var n=Mustache.render(this.templateSeriesEditor,t);this.$el.find(".editor-series-group").append(n);return this},_onAddSeries:function(e){e.preventDefault();this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var n=e(t.target);n.parent().parent().remove();this.onEditorSubmit()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};this.recline.View.Graph=this.recline.View.Flot;this.recline.View.GraphControls=this.recline.View.FlotControls;this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(e){var t=this;_.bindAll(this,"render","onHorizontalScroll");this.listenTo(this.model.records,"add reset remove",this.render);this.tempState={};var n=_.extend({hiddenFields:[]},e.state);this.state=new recline.Model.ObjectState(n)},events:{},setColumnSort:function(e){var t=[{}];t[0][this.tempState.currentColumn]={order:e};this.model.query({sort:t})},hideColumn:function(){var e=this.state.get("hiddenFields");e.push(this.tempState.currentColumn);this.state.set({hiddenFields:e});this.state.trigger("change");this.render()},showColumn:function(t){var n=_.without(this.state.get("hiddenFields"),e(t.target).data("column"));this.state.set({hiddenFields:n});this.render()},onHorizontalScroll:function(t){var n=e(t.target).scrollLeft();this.$el.find(".recline-grid thead tr").scrollLeft(n)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var e=this;var t=this.model.toJSON();t.notEmpty=this.fields.length>0;t.fields=this.fields.map(function(e){return e.toJSON()});t.lastHeaderWidth=this.scrollbarDimensions.width-2;return t},render:function(){var n=this;this.fields=new recline.Model.FieldList(this.model.fields.filter(function(e){return _.indexOf(n.state.get("hiddenFields"),e.id)==-1}));this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var r=this.fields.length;var i=n.$el.width()-20-10*r-this.scrollbarDimensions.width;var s=parseInt(Math.max(50,i/r),10);var o=Math.max(i-r*s,0);this.fields.each(function(e,t){if(t===0){e.set({width:s+o})}else{e.set({width:s})}});var u=Mustache.render(this.template,this.toTemplateJSON());this.$el.html(u);this.model.records.forEach(function(r){var i=e("<tr />");n.$el.find("tbody").append(i);var s=new t.GridRow({model:r,el:i,fields:n.fields});s.render()});var a=this.$el.find("tbody")[0];if(a.scrollHeight<=a.offsetHeight){this.$el.find("th.last-header").hide()}this.$el.find(".recline-grid").toggleClass("no-hidden",n.state.get("hiddenFields").length===0);this.$el.find(".recline-grid tbody").scroll(this.onHorizontalScroll);return this},_scrollbarSize:function(){var t=e("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body");var n={width:t.width()-t[0].clientWidth+1,height:t.height()-t[0].clientHeight};t.remove();return n}});t.GridRow=Backbone.View.extend({initialize:function(e){_.bindAll(this,"render");this._fields=e.fields;this.listenTo(this.model,"change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var e=this;var t=this.model;var n=this._fields.map(function(e){return{field:e.id,width:e.get("width"),value:t.getFieldValue(e)}});return{id:this.id,cells:n}},render:function(){this.$el.attr("data-id",this.model.id);var e=Mustache.render(this.template,this.toTemplateJSON());this.$el.html(e);return this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(t){var n=this.$el.find(".data-table-cell-editor-editor");if(n.length>0){n.parents(".data-table-cell-value").html(n.text()).siblings(".data-table-cell-edit").removeClass("hidden")}e(t.target).addClass("hidden");var r=e(t.target).siblings(".data-table-cell-value");r.data("previousContents",r.text());var i=Mustache.render(this.cellEditorTemplate,{value:r.text()});r.html(i)},onEditorOK:function(t){var n=this;var r=e(t.target);var i=r.parents("tr").attr("data-id");var s=r.parents("td").attr("data-field");var o=r.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val();var u={};u[s]=o;this.model.set(u);this.trigger("recline:flash",{message:"Updating row...",loader:true});this.model.save().then(function(e){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:true})})},onEditorCancel:function(t){var n=e(t.target).parents(".data-table-cell-value");n.html(n.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(e){var n=this;this.visible=true;this.mapReady=false;this.map=null;var r=_.extend({geomField:null,lonField:null,latField:null,autoZoom:true,cluster:false},e.state);this.state=new recline.Model.ObjectState(r);this._clusterOptions={zoomToBoundsOnClick:true,maxClusterRadius:80,singleMarkerMode:false,skipDuplicateAddTesting:true,animateAddingMarkers:false};this.listenTo(this.model.fields,"change",function(){n._setupGeometryField();n.render()});this.listenTo(this.model.records,"add",function(e){n.redraw("add",e)});this.listenTo(this.model.records,"change",function(e){n.redraw("remove",e);n.redraw("add",e)});this.listenTo(this.model.records,"remove",function(e){n.redraw("remove",e)});this.listenTo(this.model.records,"reset",function(){n.redraw("reset")});this.menu=new t.MapMenu({model:this.model,state:this.state.toJSON()});this.listenTo(this.menu.state,"change",function(){n.state.set(n.menu.state.toJSON());n.redraw()});this.listenTo(this.state,"change",function(){n.redraw()});this.elSidebar=this.menu.$el},infobox:function(e){var t="";for(var n in e.attributes){if(!(this.state.get("geomField")&&n==this.state.get("geomField"))){t+="<div><strong>"+n+"</strong>: "+e.attributes[n]+"</div>"}}return t},geoJsonLayerOptions:{pointToLayer:function(e,t){var n=new L.Marker(t);n.bindPopup(e.properties.popupContent);this.markers.addLayer(n);return n},onEachFeature:function(e,t){if(e.properties&&e.properties.popupContent){t.bindPopup(e.properties.popupContent)}}},render:function(){var e=this;var t=Mustache.render(this.template,this.model.toTemplateJSON());this.$el.html(t);this.$map=this.$el.find(".panel.map");this.redraw();return this},redraw:function(e,t){var n=this;e=e||"refresh";if(!n._geomReady()){n._setupGeometryField()}if(!n.mapReady){n._setupMap()}if(this._geomReady()&&this.mapReady){this.map.removeLayer(this.features);this.map.removeLayer(this.markers);var r=0;this.features.eachLayer(function(){r++});if(e=="refresh"||e=="reset"){this.features.clearLayers();this.map.removeLayer(this.markers);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this._add(this.model.records.models)}else if(e=="add"&&t){this._add(t)}else if(e=="remove"&&t){this._remove(t)}if(this.state.get("cluster")){this.map.addLayer(this.markers)}else{this.map.addLayer(this.features)}if(this.state.get("autoZoom")){if(this.visible){this._zoomToFeatures()}else{this._zoomPending=true}}}},show:function(){if(this.map){this.map.invalidateSize();if(this._zoomPending&&this.state.get("autoZoom")){this._zoomToFeatures();this._zoomPending=false}}this.visible=true},hide:function(){this.visible=false},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},_add:function(e){var t=this;if(!(e instanceof Array))e=[e];var n=0;var r=0;_.every(e,function(e){n+=1;var i=t._getGeometryFromRecord(e);if(typeof i==="undefined"||i===null){return true}else if(i instanceof Object){i.properties={popupContent:t.infobox(e),cid:e.cid};try{t.features.addData(i)}catch(s){r+=1;var o="Wrong geometry value";if(s.message)o+=" ("+s.message+")";if(r<=10){t.trigger("recline:flash",{message:o,category:"error"})}}}else{r+=1;if(r<=10){t.trigger("recline:flash",{message:"Wrong geometry value",category:"error"})}}return true})},_remove:function(e){var t=this;if(!(e instanceof Array))e=[e];_.each(e,function(e){for(var n in t.features._layers){if(t.features._layers[n].feature.properties.cid==e.cid){t.features.removeLayer(t.features._layers[n])}}})},_parseCoordinateString:function(e){if(typeof e!="string"){return parseFloat(e)}var t=e.split(/[^\.\d\w]+/);var n=0;var r=0;var i=[1,60,3600];var s;for(s=0;s<t.length;++s){if(isNaN(parseFloat(t[s]))){continue}n+=parseFloat(t[s])/i[r];r+=1}if(e.match(/[SW]/)){n=-1*n}return n},_getGeometryFromRecord:function(t){if(this.state.get("geomField")){var n=t.get(this.state.get("geomField"));if(typeof n==="string"){try{n=e.parseJSON(n)}catch(r){}}if(typeof n==="string"){n=n.replace("(","").replace(")","");var i=n.split(",");var s=this._parseCoordinateString(i[0]);var o=this._parseCoordinateString(i[1]);if(!isNaN(o)&&!isNaN(parseFloat(s))){return{type:"Point",coordinates:[o,s]}}else{return null}}else if(n&&_.isArray(n)){return{type:"Point",coordinates:[n[0],n[1]]}}else if(n&&n.lat){return{type:"Point",coordinates:[n.lon||n.lng,n.lat]}}return n}else if(this.state.get("lonField")&&this.state.get("latField")){var o=t.get(this.state.get("lonField"));var s=t.get(this.state.get("latField"));o=this._parseCoordinateString(o);s=this._parseCoordinateString(s);if(!isNaN(parseFloat(o))&&!isNaN(parseFloat(s))){return{type:"Point",coordinates:[o,s]}}}return null},_setupGeometryField:function(){if(!this._geomReady()){this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)});this.menu.state.set(this.state.toJSON())}},_checkField:function(e){var t;var n=this.model.fields.pluck("id");for(var r=0;r<e.length;r++){for(var i=0;i<n.length;i++){if(n[i].toLowerCase()==e[r].toLowerCase())return n[i]}}return null},_zoomToFeatures:function(){var e=this.features.getBounds();if(e&&e.getNorthEast()&&e.getSouthWest()){this.map.fitBounds(e)}else{this.map.setView([0,0],2)}},_setupMap:function(){var e=this;this.map=new L.Map(this.$map.get(0));var t="//otile{s}-s.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png";var n='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="//developer.mapquest.com/content/osm/mq_logo.png">';var r=new L.TileLayer(t,{maxZoom:18,attribution:n,subdomains:"1234"});this.map.addLayer(r);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this);this.features=new L.GeoJSON(null,this.geoJsonLayerOptions);this.map.setView([0,0],2);this.mapReady=true},_selectOption:function(t,n){var r=e("."+t+" > select > option");if(r){r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return false}})}}});t.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Latitude / Longitude fields</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON field</label>         </div>         <div class="editor-field-type-latlon">           <label>Latitude field</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Longitude field</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometry field (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Update</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Auto zoom to features</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Cluster markers</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(e){var t=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"change",this.render);this.state=new recline.Model.ObjectState(e.state);this.listenTo(this.state,"change",this.render);this.render()},render:function(){var e=this;var t=Mustache.render(this.template,this.model.toTemplateJSON());this.$el.html(t);if(this._geomReady()&&this.model.fields.length){if(this.state.get("geomField")){this._selectOption("editor-geom-field",this.state.get("geomField"));this.$el.find("#editor-field-type-geom").attr("checked","checked").change()}else{this._selectOption("editor-lon-field",this.state.get("lonField"));this._selectOption("editor-lat-field",this.state.get("latField"));this.$el.find("#editor-field-type-latlon").attr("checked","checked").change()}}if(this.state.get("autoZoom")){this.$el.find("#editor-auto-zoom").attr("checked","checked")}else{this.$el.find("#editor-auto-zoom").removeAttr("checked")}if(this.state.get("cluster")){this.$el.find("#editor-cluster").attr("checked","checked")}else{this.$el.find("#editor-cluster").removeAttr("checked")}return this},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},onEditorSubmit:function(e){e.preventDefault();if(this.$el.find("#editor-field-type-geom").attr("checked")){this.state.set({geomField:this.$el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null})}else{this.state.set({geomField:null,lonField:this.$el.find(".editor-lon-field > select > option:selected").val(),latField:this.$el.find(".editor-lat-field > select > option:selected").val()})}return false},onFieldTypeChange:function(e){if(e.target.value=="geom"){this.$el.find(".editor-field-type-geom").show();this.$el.find(".editor-field-type-latlon").hide()}else{this.$el.find(".editor-field-type-geom").hide();this.$el.find(".editor-field-type-latlon").show()}},onAutoZoomChange:function(e){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(e){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(t,n){var r=this.$el.find("."+t+" > select > option");if(r){r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return false}})}}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> records      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(e){var n=this;this._setupState(e.state);if(e.views){this.pageViews=e.views}else{this.pageViews=[{id:"grid",label:"Grid",view:new t.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new t.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new t.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new t.Timeline({model:this.model,state:this.state.get("view-timeline")})}]}if(e.sidebarViews){this.sidebarViews=e.sidebarViews}else{this.sidebarViews=[{id:"filterEditor",label:"Filters",view:new t.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new t.Fields({model:this.model})}]}this.render();this._bindStateChanges();this._bindFlashNotifications();if(this.state.get("readOnly")){this.setReadOnly()}if(this.state.get("currentView")){this.updateNav(this.state.get("currentView"))}else{this.updateNav(this.pageViews[0].id)}this._showHideSidebar();this.listenTo(this.model,"query:start",function(){n.notify({loader:true,persist:true})});this.listenTo(this.model,"query:done",function(){n.clearNotifications();n.$el.find(".doc-count").text(n.model.recordCount||"Unknown")});this.listenTo(this.model,"query:fail",function(e){n.clearNotifications();var t="";if(typeof e=="string"){t=e}else if(typeof e=="object"){if(e.title){t=e.title+": "}if(e.message){t+=e.message}}else{t="There was an error querying the backend"}n.notify({message:t,category:"error",persist:true})});this.model.queryState.set(n.state.get("query"),{silent:true})},setReadOnly:function(){this.$el.addClass("recline-read-only")},render:function(){var e=this.model.toTemplateJSON();e.views=this.pageViews;e.sidebarViews=this.sidebarViews;var t=Mustache.render(this.template,e);this.$el.html(t);var n=this.$el.find(".data-view-container");var r=this.$el.find(".data-view-sidebar");_.each(this.pageViews,function(e,t){e.view.render();if(e.view.redraw){e.view.redraw()}n.append(e.view.el);if(e.view.elSidebar){r.append(e.view.elSidebar)}});_.each(this.sidebarViews,function(e){this["$"+e.id]=e.view.$el;r.append(e.view.el)},this);this.pager=new recline.View.Pager({model:this.model});this.$el.find(".recline-results-info").after(this.pager.el);this.queryEditor=new recline.View.QueryEditor({model:this.model.queryState});this.$el.find(".query-editor-here").append(this.queryEditor.el)},remove:function(){_.each(this.pageViews,function(e){e.view.remove()});_.each(this.sidebarViews,function(e){e.view.remove()});this.pager.remove();this.queryEditor.remove();Backbone.View.prototype.remove.apply(this,arguments)},_showHideSidebar:function(){var t=this.$el.find(".data-view-sidebar");var n=t.children().filter(function(){return e(this).css("display")!="none"}).length;if(n>0){t.show()}else{t.hide()}},updateNav:function(e){this.$el.find(".navigation a").removeClass("active");var t=this.$el.find('.navigation a[data-view="'+e+'"]');t.addClass("active");_.each(this.pageViews,function(t,n){if(t.id===e){t.view.$el.show();if(t.view.elSidebar){t.view.elSidebar.show()}}else{t.view.$el.hide();if(t.view.elSidebar){t.view.elSidebar.hide()}if(t.view.hide){t.view.hide()}}});this._showHideSidebar();_.each(this.pageViews,function(t,n){if(t.id===e){if(t.view.show){t.view.show()}}})},_onMenuClick:function(t){t.preventDefault();var n=e(t.target).attr("data-action");this["$"+n].toggle();this._showHideSidebar()},_onSwitchView:function(t){t.preventDefault();var n=e(t.target).attr("data-view");this.updateNav(n);this.state.set({currentView:n})},_setupState:function(e){var n=this;var r=t.parseHashQueryString();var i=r.reclineQuery;i=i?JSON.parse(i):n.model.queryState.toJSON();var s=r["view-graph"]||r.graph;s=s?JSON.parse(s):{};var o=_.extend({query:i,"view-graph":s,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:false},e);this.state=new recline.Model.ObjectState(o)},_bindStateChanges:function(){var e=this;this.listenTo(this.model.queryState,"change",function(){e.state.set({query:e.model.queryState.toJSON()})});_.each(this.pageViews,function(t){if(t.view.state&&t.view.state.bind){var n={};n["view-"+t.id]=t.view.state.toJSON();e.state.set(n);e.listenTo(t.view.state,"change",function(){var n={};n["view-"+t.id]=t.view.state.toJSON();e.state.set(n,{silent:true});e.state.trigger("change")})}})},_bindFlashNotifications:function(){var e=this;_.each(this.pageViews,function(t){e.listenTo(t.view,"recline:flash",function(t){e.notify(t)})})},notify:function(t){var n=_.extend({message:"Loading",category:"warning",loader:false},t);var r;if(n.loader){r='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>'}else{r='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>'}var i=e(Mustache.render(r,n));i=e(i).appendTo(e(".recline-data-explorer .alert-messages"));if(!t.persist){setTimeout(function(){e(i).fadeOut(1e3,function(){e(this).remove()})},1e3)}},clearNotifications:function(){var t=e(".recline-data-explorer .alert-messages .alert");t.fadeOut(1500,function(){e(this).remove()})}});t.MultiView.restore=function(e){var n;if(e.backend==="memory"){n={backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]}}else{n=_.extend({url:e.url,backend:e.backend},e.dataset)}var r=new recline.Model.Dataset(n);var i=new t.MultiView({model:r,state:e});return i};var n=/^([^?]+)(\?.*)?/;t.parseHashUrl=function(e){var t=n.exec(e);if(t===null){return{}}else{return{path:t[1],query:t[2]||""}}};t.parseQueryString=function(e){if(!e){return{}}var t={},n,r=function(e){return unescape(e.replace(/\+/g," "))},i=/([^&=]+)=?([^&]*)/g;if(e&&e.length&&e[0]==="?"){e=e.slice(1)}while(n=i.exec(e)){t[r(n[1])]=r(n[2])}return t};t.parseHashQueryString=function(){var e=t.parseHashUrl(window.location.hash).query;return t.parseQueryString(e)};t.composeQueryString=function(t){var n="?";var r=[];e.each(t,function(e,t){if(typeof t==="object"){t=JSON.stringify(t)}r.push(e+"="+encodeURIComponent(t))});n+=r.join("&");return n};t.getNewHashForQueryString=function(e){var n=t.composeQueryString(e);if(window.location.hash){return window.location.hash.split("?")[0].slice(1)+n}else{return n}};t.setHashQueryString=function(e){window.location.hash=t.getNewHashForQueryString(e)}})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.GridControl=Backbone.View.extend({className:"recline-row-add",template:'<h1><a href="#" class="recline-row-add btn">Add row</a></h1>',initialize:function(e){var t=this;_.bindAll(this,"render");this.state=new recline.Model.ObjectState;this.render()},render:function(){var e=this;this.$el.html(this.template)},events:{"click .recline-row-add":"addNewRow"},addNewRow:function(e){e.preventDefault();this.state.trigger("change")}});t.SlickGrid=Backbone.View.extend({initialize:function(e){var n=this;this.$el.addClass("recline-slickgrid");this.templates={deleterow:'<a href="#" class="recline-row-delete btn" title="Delete row">X</a>'};_.bindAll(this,"render","onRecordChanged");this.listenTo(this.model.records,"add remove reset",this.render);this.listenTo(this.model.records,"change",this.onRecordChanged);this.listenTo(this.model,"query:start",function(){n.notify({loader:true,persist:true})});this.listenTo(this.model,"query:done",function(){n.clearNotifications()});this.listenTo(this.model,"query:fail",function(e){n.clearNotifications();var t="";if(typeof e=="string"){t=e}else if(typeof e=="object"){if(e.title){t=e.title+": "}if(e.message){t+=e.message}}else{t="There was an error querying the backend"}n.notify({message:t,category:"error",persist:true})});var r=_.extend({hiddenColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],columnsEditor:[],options:{},fitColumns:false},e.state);this.state=new recline.Model.ObjectState(r);this._slickHandler=new Slick.EventHandler;if(this.state.get("gridOptions")&&this.state.get("gridOptions").enabledAddRow!=undefined&&this.state.get("gridOptions").enabledAddRow==true){this.editor=new t.GridControl;this.elSidebar=this.editor.$el;this.listenTo(this.editor.state,"change",function(){this.model.records.add(new recline.Model.Record)})}},onRecordChanged:function(e){if(!this.grid){return}var t=this.grid.getData().getModelRow(e);this.grid.invalidateRow(t);this.grid.getData().updateItem(e,t);this.grid.render()},render:function(){function a(t){var n={};e.model.fields.each(function(e){var r="";if(!_.isUndefined(t.getFieldValueUnrendered(e))){r=t.getFieldValueUnrendered(e)}n[e.id]=r});return n}function f(){var e=[];var t=[];this.push=function(n,r){e.push(n);t.push(r)};this.getLength=function(){return t.length};this.getItem=function(e){return t[e]};this.getItemMetadata=function(e){return{}};this.getModel=function(t){return e[t]};this.getModelRow=function(t){return _.indexOf(e,t)};this.updateItem=function(n,r){t[r]=a(n);e[r]=n}}var e=this;var t=_.extend({enableCellNavigation:true,enableColumnReorder:true,explicitInitialization:true,syncColumnCellResize:true,forceFitColumns:this.state.get("fitColumns")},e.state.get("gridOptions"));var n=[];var r;if(!("defaultFormatter"in t||"formatterFactory"in t)){r=function(t,n,r,i,s){if(i.id=="del"){return e.templates.deleterow}var o=e.model.fields.get(i.id);if(o.renderer){return o.renderer(r,o,s)}else{return r}}}var i=function(e){return function(t){if(e.type=="date"&&isNaN(Date.parse(t))){return{valid:false,msg:"A date is required, check field field-date-format"}}else{return{valid:true,msg:null}}}};if(this.state.get("gridOptions")&&this.state.get("gridOptions").enableReOrderRow!=undefined&&this.state.get("gridOptions").enableReOrderRow==true){n.push({id:"#",name:"",width:22,behavior:"selectAndMove",selectable:false,resizable:false,cssClass:"recline-cell-reorder"})}if(this.state.get("gridOptions")&&this.state.get("gridOptions").enabledDelRow!=undefined&&this.state.get("gridOptions").enabledDelRow==true){n.push({id:"del",name:"",field:"del",sortable:true,width:38,formatter:r,validator:i})}_.each(this.model.fields.toJSON(),function(t){var s={id:t.id,name:t.label,field:t.id,sortable:true,minWidth:80,formatter:r,validator:i(t)};var o=_.find(e.state.get("columnsWidth"),function(e){return e.column===t.id});if(o){s.width=o.width}var u=_.find(e.state.get("columnsEditor"),function(e){return e.column===t.id});if(u){s.editor=u.editor}else{var a={string:Slick.Editors.LongText,integer:Slick.Editors.IntegerEditor,number:Slick.Editors.Text,date:Slick.Editors.Text,"boolean":Slick.Editors.YesNoSelectEditor};if(t.type in a){s.editor=a[t.type]}else{s.editor=Slick.Editors.LongText}}n.push(s)});var s=_.filter(n,function(t){return _.indexOf(e.state.get("hiddenColumns"),t.id)===-1});if(this.state.get("columnsOrder")&&this.state.get("columnsOrder").length>0){s=s.sort(function(t,n){return _.indexOf(e.state.get("columnsOrder"),t.id)>_.indexOf(e.state.get("columnsOrder"),n.id)?1:-1});n=n.sort(function(t,n){return _.indexOf(e.state.get("columnsOrder"),t.id)>_.indexOf(e.state.get("columnsOrder"),n.id)?1:-1})}var o=[];for(var u=n.length-1;u>=0;u--){if(_.indexOf(_.pluck(s,"id"),n[u].id)===-1){o.push(n.splice(u,1)[0])}}n=n.concat(o);var l=new f;this.model.records.each(function(e){l.push(e,a(e))});this.grid=new Slick.Grid(this.el,l,s,t);var c=this.model.queryState.get("sort");if(c){var h=c[0].field;var p=c[0].order!=="desc";this.grid.setSortColumn(h,p)}e.grid.setSelectionModel(new Slick.RowSelectionModel);var d=new Slick.RowMoveManager({cancelEditOnDrag:true});d.onBeforeMoveRows.subscribe(function(e,t){for(var n=0;n<t.rows.length;n++){if(t.rows[n]==t.insertBefore||t.rows[n]==t.insertBefore-1){e.stopPropagation();return false}}return true});d.onMoveRows.subscribe(function(t,n){var r=[],i,s;var o=n.rows;var u=n.insertBefore;var a=e.model.records.toJSON();i=a.slice(0,u);s=a.slice(u,a.length);o.sort(function(e,t){return e-t});for(var f=0;f<o.length;f++){r.push(a[o[f]])}o.reverse();for(var f=0;f<o.length;f++){var l=o[f];if(l<u){i.splice(l,1)}else{s.splice(l-u,1)}}a=i.concat(r.concat(s));var c=[];for(var f=0;f<o.length;f++)c.push(i.length+f);e.model.records.reset(a)});if(this.state.get("gridOptions")&&this.state.get("gridOptions").enableReOrderRow!=undefined&&this.state.get("gridOptions").enableReOrderRow==true){e.grid.registerPlugin(d)}this._slickHandler.subscribe(this.grid.onSort,function(t,n){var r=n.sortAsc?"asc":"desc";var i=[{field:n.sortCol.field,order:r}];e.model.query({sort:i})});this._slickHandler.subscribe(this.grid.onColumnsReordered,function(t,n){e.state.set({columnsOrder:_.pluck(e.grid.getColumns(),"id")})});this.grid.onColumnsResized.subscribe(function(t,n){var r=n.grid.getColumns();var i=n.grid.getOptions().defaultColumnWidth;var s=[];_.each(r,function(e){if(e.width!=i){s.push({column:e.id,width:e.width})}});e.state.set({columnsWidth:s})});this._slickHandler.subscribe(this.grid.onCellChange,function(e,t){var n=t.grid;var r=l.getModel(t.row);var i=n.getColumns()[t.cell].id;var s={};s[i]=t.item[i];r.set(s)});this._slickHandler.subscribe(this.grid.onClick,function(t,n){try{t.preventDefault()}catch(t){}var r=0;if(e.state.get("gridOptions")&&e.state.get("gridOptions").enableReOrderRow!=undefined&&e.state.get("gridOptions").enableReOrderRow==true){r=1}if(n.cell==r&&e.state.get("gridOptions").enabledDelRow==true){var i=l.getModel(n.row);i.destroy()}});var v=new Slick.Controls.ColumnPicker(n,this.grid,_.extend(t,{state:this.state}));if(e.visible){e.grid.init();e.rendered=true}else{e.rendered=false}return this},remove:function(){this._slickHandler.unsubscribeAll();Backbone.View.prototype.remove.apply(this,arguments)},show:function(){if(!this.rendered){if(!this.grid){this.render()}this.grid.init();this.rendered=true}this.visible=true},hide:function(){this.visible=false},notify:function(t){var n=_.extend({message:"Loading",category:"warning",loader:true},t);var r;if(n.loader){r='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>'}else{r='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>'}var i=e(Mustache.render(r,n));i=e(i).appendTo(e(".controls"));if(!t.persist){setTimeout(function(){e(i).fadeOut(1e3,function(){e(this).remove()})},1e3)}},clearNotifications:function(){var t=e(".controls .alert");t.fadeOut(1500,function(){e(this).remove()})}})})(jQuery,recline.View);(function(e){function t(t,n,r){function u(){n.onHeaderContextMenu.subscribe(a);r=e.extend({},o,r);i=e('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body);i.bind("mouseleave",function(t){e(this).fadeOut(r.fadeSpeed)});i.bind("click",f)}function a(o,u){o.preventDefault();i.empty();s=[];var a,f;for(var l=0;l<t.length;l++){a=e("<li />").appendTo(i);f=e('<input type="checkbox" />').data("column-id",t[l].id).attr("id","slick-column-vis-"+t[l].id);s.push(f);if(n.getColumnIndex(t[l].id)!==null){f.attr("checked","checked")}f.appendTo(a);e("<label />").text(t[l].name).attr("for","slick-column-vis-"+t[l].id).appendTo(a)}e("<li/>").addClass("divider").appendTo(i);a=e("<li />").data("option","autoresize").appendTo(i);f=e('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize");f.appendTo(a);e("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(a);if(n.getOptions().forceFitColumns){f.attr("checked","checked")}i.css("top",o.pageY-10).css("left",o.pageX-10).fadeIn(r.fadeSpeed)}function f(i){var o;if(e(i.target).data("option")==="autoresize"){var u;if(e(i.target).is("li")){o=e(i.target).find("input").first();u=!o.is(":checked");o.attr("checked",u)}else{u=i.target.checked}if(u){n.setOptions({forceFitColumns:true});n.autosizeColumns()}else{n.setOptions({forceFitColumns:false})}r.state.set({fitColumns:u});return}if(e(i.target).is("li")&&!e(i.target).hasClass("divider")||e(i.target).is("input")){if(e(i.target).is("li")){o=e(i.target).find("input").first();o.attr("checked",!o.is(":checked"))}var a=[];var f=[];e.each(s,function(n,r){if(e(this).is(":checked")){a.push(t[n])}else{f.push(t[n].id)}});if(!a.length){e(i.target).attr("checked","checked");return}n.setColumns(a);r.state.set({hiddenColumns:f})}}var i;var s;var o={fadeSpeed:250};u()}e.extend(true,window,{Slick:{Controls:{ColumnPicker:t}}})})(jQuery);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";if(typeof VMM!=="undefined"){VMM.debug=false}t.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(e){var t=this;this.timeline=new VMM.Timeline(this.elementId);this._timelineIsInitialized=false;this.listenTo(this.model.fields,"reset",function(){t._setupTemporalField()});this.listenTo(this.model.records,"all",function(){t.reloadData()});var n=_.extend({startField:null,endField:null,nonUSDates:false,timelineJSOptions:{}},e.state);this.state=new recline.Model.ObjectState(n);this._setupTemporalField()},render:function(){var t={};var n=Mustache.render(this.template,t);this.$el.html(n);if(e(this.elementId).length>0){this._initTimeline()}},show:function(){if(this._timelineIsInitialized===false){this._initTimeline()}},_initTimeline:function(){var e=this._timelineJSON();var t=this.state.get("timelineJSOptions");t.id=this.elementId;this.timeline.init(t,e);this._timelineIsInitialized=true},reloadData:function(){if(this._timelineIsInitialized){var e=this._timelineJSON();this.timeline.reload(e)}},convertRecord:function(e,t){return this._convertRecord(e,t)},_convertRecord:function(e,t){var n=this._parseDate(e.get(this.state.get("startField")));var r=this._parseDate(e.get(this.state.get("endField")));if(n){var i={startDate:n,endDate:r,headline:String(e.get("title")||""),text:e.get("description")||e.summary()};return i}else{return null}},_timelineJSON:function(){var e=this;var t={timeline:{type:"default",headline:"",date:[]}};this.model.records.each(function(n){var r=e.convertRecord(n,e.fields);if(r){t.timeline.date.push(r)}});if(t.timeline.date.length===0){var n={startDate:"2000,1,1",headline:"No data to show!"};t.timeline.date.push(n)}return t},_parseDate:function(t){if(!t){return null}var n=e.trim(t);n=n.replace(/(\d)th/g,"$1");n=n.replace(/(\d)st/g,"$1");n=e.trim(n);if(n.match(/\d\d\d\d-\d\d-\d\d(T.*)?/)){n=n.replace(/-/g,",").replace("T",",").replace(":",",")}if(n.match(/\d\d-\d\d-\d\d.*/)){n=n.replace(/-/g,"/")}if(this.state.get("nonUSDates")){var r=n.match(/(\d\d)\/(\d\d)\/(\d\d.*)/);if(r){n=[r[2],r[1],r[3]].join("/")}}return n},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(e){var t=this.model.fields.pluck("id");for(var n=0;n<e.length;n++){for(var r=0;r<t.length;r++){if(t[r].toLowerCase()==e[n].toLowerCase())return t[r]}}return null}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(e){_.bindAll(this,"render");this.listenTo(this.model.facets,"all",this.render);this.listenTo(this.model.fields,"all",this.render);this.render()},render:function(){var e={fields:this.model.fields.toJSON()};e.facets=_.map(this.model.facets.toJSON(),function(e){if(e._type==="date_histogram"){e.entries=_.map(e.entries,function(e){e.term=(new Date(e.time)).toDateString();return e})}return e});var t=Mustache.render(this.template,e);this.$el.html(t);if(this.model.facets.length>0){this.$el.show()}else{this.$el.hide()}},onHide:function(e){e.preventDefault();this.$el.hide()},onFacetFilter:function(t){t.preventDefault();var n=e(t.target);var r=n.closest(".facet-summary").attr("data-facet");var i=n.attr("data-value");this.model.queryState.addFilter({type:"term",field:r,term:i});this.model.query()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',initialize:function(e){var t=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"reset",function(e){t.model.fields.each(function(e){e.facets.unbind("all",t.render);e.facets.bind("all",t.render)});t.model.getFieldsSummary();t.render()});this.$el.find(".collapse").collapse();this.render()},render:function(){var e=this;var t={fields:[]};this.model.fields.each(function(e){var n=e.toJSON();n.facets=e.facets.toJSON();t.fields.push(n)});var n=Mustache.render(this.template,t);this.$el.html(n)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <a href="#" class="js-add-filter">Add filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Value</option>             <option value="range">Range</option>             <option value="geo_distance">Geo distance</option>           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{from}}" name="from" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{to}}" name="to" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.fields,"all",this.render);this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render);this.render()},render:function(){var t=this;var n=e.extend(true,{},this.model.queryState.toJSON());n.filters=_.map(n.filters,function(e,t){e.id=t;return e});n.fields=this.model.fields.toJSON();n.filterRender=function(){return Mustache.render(t.filterTemplates[this.type],this)};var r=Mustache.render(this.template,n);this.$el.html(r)},onAddFilterShow:function(t){t.preventDefault();var n=e(t.target);n.hide();this.$el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var n=e(t.target);n.hide();var r=n.find("select.filterType").val();var i=n.find("select.fields").val();this.model.queryState.addFilter({type:r,field:i})},onRemoveFilter:function(t){t.preventDefault();var n=e(t.target);var r=n.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var n=this;t.preventDefault();var r=n.model.queryState.get("filters");var i=e(t.target);_.each(i.find("input"),function(t){var n=e(t);var i=n.attr("data-filter-type");var s=n.attr("data-filter-field");var o=parseInt(n.attr("data-filter-id"),10);var u=n.attr("name");var a=n.val();switch(i){case"term":r[o].term=a;break;case"range":r[o][u]=a;break;case"geo_distance":if(u==="distance"){r[o].distance=parseFloat(a)}else{r[o].point[u]=parseFloat(a)}break}});n.model.queryState.set({filters:r,from:0});n.model.queryState.trigger("change")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><label for="from">From</label><a><input name="from" type="text" value="{{from}}" /> &ndash; <label for="to">To</label><input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.queryState,"change",this.render);this.render()},onFormSubmit:function(e){e.preventDefault();var t=parseInt(this.$el.find('input[name="from"]').val())-1;var n=parseInt(this.$el.find('input[name="to"]').val())-1;var r=this.model.recordCount-1;if(this.model.queryState.get("from")!=t){this.model.queryState.set({from:Math.min(r,Math.max(t,0))})}else if(this.model.queryState.get("to")!=n){var i=Math.min(r,Math.max(n,0));this.model.queryState.set({size:Math.min(r+1,Math.max(i-t+1,1))})}},onPaginationUpdate:function(t){t.preventDefault();var n=e(t.target);var r=0;var i=this.model.queryState.get("from");var s=this.model.queryState.get("size");var o=false;if(n.parent().hasClass("prev")){r=Math.max(i-Math.max(0,s),0);o=r!=i}else{r=Math.max(i+s,0);o=r<this.model.recordCount}if(o){this.model.queryState.set({from:r})}},render:function(){var e=this.model.toJSON();var t=parseInt(this.model.queryState.get("from"));e.from=t+1;e.to=Math.min(t+this.model.queryState.get("size"),this.model.recordCount);var n=Mustache.render(this.template,e);this.$el.html(n);return this}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <label>Search</label><input type="text" name="q" value="{{q}}" class="span2" placeholder="Search data ..." class="search-query" />       </div>       <button type="submit" class="btn">Go &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model,"change",this.render);this.render()},onFormSubmit:function(e){e.preventDefault();var t=this.$el.find(".text-query input").val();this.model.set({q:t})},render:function(){var e=this.model.toJSON();var t=Mustache.render(this.template,e);this.$el.html(t)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){"use strict";t.ValueFilter=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <button class="btn js-add-filter add-filter">Add filter</button>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn update-filter">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           {{field}}           <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.fields,"all",this.render);this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render);this.render()},render:function(){var t=this;var n=e.extend(true,{},this.model.queryState.toJSON());n.filters=_.map(n.filters,function(e,t){e.id=t;return e});n.fields=this.model.fields.toJSON();n.filterRender=function(){return Mustache.render(t.filterTemplates.term,this)};var r=Mustache.render(this.template,n);this.$el.html(r)},updateFilter:function(t){var n=this;var r=n.model.queryState.get("filters");var i=e(t);var s=parseInt(i.attr("data-filter-id"),10);var o=i.val();r[s].term=o},onAddFilterShow:function(t){t.preventDefault();var n=e(t.target);n.hide();this.$el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var n=e(t.target);n.hide();var r=n.find("select.fields").val();this.model.queryState.addFilter({type:"term",field:r})},onRemoveFilter:function(t){t.preventDefault();var n=e(t.target);var r=n.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var n=this;t.preventDefault();var r=n.model.queryState.get("filters");var i=e(t.target);_.each(i.find("input"),function(e){n.updateFilter(e)});n.model.queryState.set({filters:r,from:0});n.model.queryState.trigger("change")}})})(jQuery,recline.View)