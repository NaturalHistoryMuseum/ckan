this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.CSV=this.recline.Backend.CSV||{};(function(e){e.__type__="csv";var c=(typeof jQuery!=="undefined"&&jQuery.Deferred)||_.Deferred;e.fetch=function(l){var i=new c();if(l.file){var h=new FileReader();var k=l.encoding||"UTF-8";h.onload=function(n){var m=e.extractFields(e.parseCSV(n.target.result,l),l);m.useMemoryStore=true;m.metadata={filename:l.file.name};i.resolve(m)};h.onerror=function(m){alert("Failed to load file. Code: "+m.target.error.code)};h.readAsText(l.file,k)}else{if(l.data){var j=e.extractFields(e.parseCSV(l.data,l),l);j.useMemoryStore=true;i.resolve(j)}else{if(l.url){jQuery.get(l.url).done(function(n){var m=e.extractFields(e.parseCSV(n,l),l);m.useMemoryStore=true;i.resolve(m)})}}}return i.promise()};e.extractFields=function(i,h){if(h.noHeaderRow!==true&&i.length>0){return{fields:i[0],records:i.slice(1)}}else{return{records:i}}};e.parseCSV=function(u,v){u=f(u);var v=v||{};var q=(v.trim===false)?false:true;var j=v.delimiter||",";var h=v.quotechar||'"';var r="",m=false,n=false,p="",t=[],k=[],l,o;o=function(i){if(n!==true){if(i===""){i=null}else{if(q===true){i=a(i)}}if(g.test(i)){i=parseInt(i,10)}else{if(d.test(i)){i=parseFloat(i,10)}}}return i};for(l=0;l<u.length;l+=1){r=u.charAt(l);if(m===false&&(r===j||r==="\n")){p=o(p);t.push(p);if(r==="\n"){k.push(t);t=[]}p="";n=false}else{if(r!==h){p+=r}else{if(!m){m=true;n=true}else{if(u.charAt(l+1)===h){p+=h;l+=1}else{m=false}}}}}p=o(p);t.push(p);k.push(t);if(v.skipInitialRows){k=k.slice(v.skipInitialRows)}return k};e.serializeCSV=function(o,v){var r=null;if(o instanceof Array){r=o}else{r=[];var u=_.pluck(o.fields,"id");r.push(u);_.each(o.records,function(i,j){var w=_.map(u,function(x){return i[x]});r.push(w)})}var v=v||{};var k=v.delimiter||",";var h=v.quotechar||'"';var s="",q="",t="",m="",n,l,p;p=function(i){if(i===null){i=""}else{if(typeof i==="string"&&b.test(i)){i=h+i+h}else{if(typeof i==="number"){i=i.toString(10)}}}return i};for(n=0;n<r.length;n+=1){s=r[n];for(l=0;l<s.length;l+=1){q=p(s[l]);if(l===(s.length-1)){t+=q;m+=t+"\n";t=""}else{t+=q+k}q=""}}return m};var g=/^\d+$/,d=/^\d*\.\d+$|^\d+\.\d*$/,b=/^\s|\s$|,|"|\n/,a=(function(){if(String.prototype.trim){return function(h){return h.trim()}}else{return function(h){return h.replace(/^\s*/,"").replace(/\s*$/,"")}}}());function f(h){if(h.charAt(h.length-1)!=="\n"){return h}else{return h.substring(0,h.length-1)}}}(this.recline.Backend.CSV));this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{};(function(c){c.__type__="dataproxy";c.dataproxy_url="//jsonpdataproxy.appspot.com";c.timeout=5000;var b=(typeof jQuery!=="undefined"&&jQuery.Deferred)||_.Deferred;c.fetch=function(f){var e={url:f.url,"max-results":f.size||f.rows||1000,type:f.format||""};var g=jQuery.ajax({url:c.dataproxy_url,data:e,dataType:"jsonp"});var d=new b();a(g).done(function(h){if(h.error){d.reject(h.error)}d.resolve({records:h.data,fields:h.fields,useMemoryStore:true})}).fail(function(h){d.reject(h)});return d.promise()};var a=function(e){var d=new b();var f=setTimeout(function(){d.reject({message:"Request Error: Backend did not respond after "+(c.timeout/1000)+" seconds"})},c.timeout);e.done(function(g){clearTimeout(f);d.resolve(g)}).fail(function(g){clearTimeout(f);d.reject(g)});return d.promise()}}(this.recline.Backend.DataProxy));this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.Memory=this.recline.Backend.Memory||{};(function(b){b.__type__="memory";var a=(typeof jQuery!=="undefined"&&jQuery.Deferred)||_.Deferred;b.Store=function(e,c){var d=this;this.records=e;this.data=this.records;if(c){this.fields=c}else{if(e){this.fields=_.map(e[0],function(g,f){return{id:f,type:"string"}})}}this.update=function(f){_.each(d.records,function(h,g){if(f.id===h.id){d.records[g]=f}})};this.remove=function(f){var g=_.reject(d.records,function(h){return(f.id===h.id)});this.records=g};this.save=function(h,i){var g=this;var f=new a();_.each(h.updates,function(j){g.update(j)});_.each(h.deletes,function(j){g.remove(j)});f.resolve();return f.promise()},this.query=function(k){var f=new a();var j=k.size||this.records.length;var l=k.from||0;var h=this.records;h=this._applyFilters(h,k);h=this._applyFreeTextQuery(h,k);_.each(k.sort,function(m){var n=m.field;h=_.sortBy(h,function(p){var o=p[n];return o});if(m.order=="desc"){h.reverse()}});var i=this.computeFacets(h,k);var g={total:h.length,hits:h.slice(l,l+j),facets:i};f.resolve(g);return f.promise()};this._applyFilters=function(k,f){var g=f.filters;var o={term:h,terms:j,range:l,geo_distance:i};var p={integer:function(q){return parseFloat(q,10)},"float":function(q){return parseFloat(q,10)},number:function(q){return parseFloat(q,10)},string:function(q){return q.toString()},date:function(q){return moment(q).valueOf()},datetime:function(q){return new Date(q).valueOf()}};var m={};_.each(d.fields,function(q){m[q.id]=q
});function n(r){var q=m[r.field].type||"string";return p[q]}return _.filter(k,function(q){var r=_.map(g,function(s){return o[s.type](q,s)});return _.all(r,_.identity)});function h(q,s){var u=n(s);var t=u(q[s.field]);var r=u(s.term);return(t===r)}function j(q,r){var u=n(r);var t=u(q[r.field]);var s=u(r.terms).split(",");return(_.indexOf(s,t)>=0)}function l(q,s){var t=(_.isUndefined(s.from)||s.from===null||s.from==="");var r=(_.isUndefined(s.to)||s.to===null||s.to==="");var v=n(s);var u=v(q[s.field]);var x=v(t?"":s.from);var w=v(r?"":s.to);if((!t||!r)&&u===""){return false}return((t||u>=x)&&(r||u<=w))}function i(){}};this._applyFreeTextQuery=function(f,i){if(i.q){var h=i.q.split(" ");var g=_.map(h,function(j){return new RegExp(j.toLowerCase())});f=_.filter(f,function(j){var k=true;_.each(g,function(m){var l=false;_.each(d.fields,function(o){var n=j[o.id];if((n!==null)&&(n!==undefined)){n=n.toString()}else{n=""}l=l||(m.test(n.toLowerCase()))});k=k&&l});return k})}return f};this.computeFacets=function(f,g){var h={};if(!g.facets){return h}_.each(g.facets,function(i,j){h[j]=new recline.Model.Facet({id:j}).toJSON();h[j].termsall={}});_.each(f,function(i){_.each(g.facets,function(l,n){var j=l.terms.field;var m=i[j];var k=h[n];if(m){k.termsall[m]=k.termsall[m]?k.termsall[m]+1:1}else{k.missing=k.missing+1}})});_.each(g.facets,function(k,l){var i=h[l];var j=_.map(i.termsall,function(n,m){return{term:m,count:n}});i.terms=_.sortBy(j,function(m){return -m.count});i.terms=i.terms.slice(0,10)});return h}}}(this.recline.Backend.Memory));if(!("indexOf" in Array.prototype)){Array.prototype.indexOf=function(b,a){if(a===undefined){a=0}if(a<0){a+=this.length}if(a<0){a=0}for(var c=this.length;a<c;a++){if(a in this&&this[a]===b){return a}}return -1}}if(!("lastIndexOf" in Array.prototype)){Array.prototype.lastIndexOf=function(b,a){if(a===undefined){a=this.length-1}if(a<0){a+=this.length}if(a>this.length-1){a=this.length-1}for(a++;a-->0;){if(a in this&&this[a]===b){return a}}return -1}}if(!("forEach" in Array.prototype)){Array.prototype.forEach=function(c,b){for(var a=0,d=this.length;a<d;a++){if(a in this){c.call(b,this[a],a,this)}}}}if(!("map" in Array.prototype)){Array.prototype.map=function(d,c){var a=new Array(this.length);for(var b=0,e=this.length;b<e;b++){if(b in this){a[b]=d.call(c,this[b],b,this)}}return a}}if(!("filter" in Array.prototype)){Array.prototype.filter=function(d,e){var a=[],b;for(var c=0,f=this.length;c<f;c++){if(c in this&&d.call(e,b=this[c],c,this)){a.push(b)}}return a}}if(!("every" in Array.prototype)){Array.prototype.every=function(a,c){for(var b=0,d=this.length;b<d;b++){if(b in this&&!a.call(c,this[b],b,this)){return false}}return true}}if(!("some" in Array.prototype)){Array.prototype.some=function(a,c){for(var b=0,d=this.length;b<d;b++){if(b in this&&a.call(c,this[b],b,this)){return true}}return false}}this.recline=this.recline||{};this.recline.Model=this.recline.Model||{};(function(i){var g=(typeof jQuery!=="undefined"&&jQuery.Deferred)||_.Deferred;i.Dataset=Backbone.Model.extend({constructor:function a(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){var k=this;_.bindAll(this,"query");this.backend=null;if(this.get("backend")){this.backend=this._backendFromString(this.get("backend"))}else{if(this.get("records")){this.backend=recline.Backend.Memory}}this.fields=new i.FieldList();this.records=new i.RecordList();this._changes={deletes:[],updates:[],creates:[]};this.facets=new i.FacetList();this.recordCount=null;this.queryState=new i.Query();this.queryState.bind("change facet:add",function(){k.query()});this._store=this.backend;this._handleResult=(this.backend!=null&&_.has(this.backend,"handleQueryResult"))?this.backend.handleQueryResult:this._handleQueryResult;if(this.backend==recline.Backend.Memory){this.fetch()}},sync:function(m,l,k){return this.backend.sync(m,l,k)},fetch:function(){var l=this;var k=new g();if(this.backend!==recline.Backend.Memory){this.backend.fetch(this.toJSON()).done(m).fail(function(n){k.reject(n)})}else{m({records:this.get("records"),fields:this.get("fields"),useMemoryStore:true})}function m(p){var n=l.get("fields")||p.fields;var o=l._normalizeRecordsAndFields(p.records,n);if(p.useMemoryStore){l._store=new recline.Backend.Memory.Store(o.records,o.fields)}l.set(p.metadata);l.fields.reset(o.fields);l.query().done(function(){k.resolve(l)}).fail(function(q){k.reject(q)})}return k.promise()},_normalizeRecordsAndFields:function(m,k){if(!k&&m&&m.length>0){if(m[0] instanceof Array){k=m[0];m=m.slice(1)}else{k=_.map(_.keys(m[0]),function(n){return{id:n}})}}if(k&&k.length>0&&(k[0]===null||typeof(k[0])!="object")){var l={};k=_.map(k,function(p,o){if(p===null){p=""}else{p=p.toString()}var n=p.replace(/^\s+|\s+$/g,"");if(n===""){n="_noname_";p=n}while(n in l){l[p]+=1;n=p+l[p]}if(!(p in l)){l[p]=0}return{id:n}})}if(m&&m.length>0&&m[0] instanceof Array){m=_.map(m,function(o){var n={};_.each(k,function(q,p){n[q.id]=o[p]});return n})}return{fields:k,records:m}},save:function(){var k=this;
return this._store.save(this._changes,this.toJSON())},query:function(n){var m=this;var k=new g();this.trigger("query:start");if(n){var l=n;if(n instanceof i.Query){l=n.toJSON()}this.queryState.set(l,{silent:true})}var o=this.queryState.toJSON();this._store.query(o,this.toJSON()).done(function(p){m._handleResult(p);m.trigger("query:done");k.resolve(m.records)}).fail(function(p){m.trigger("query:fail",p);k.reject(p)});return k.promise()},_handleQueryResult:function(m){var k=this;k.recordCount=m.total;var n=_.map(m.hits,function(o){var p=new i.Record(o);p.fields=k.fields;p.bind("change",function(q){k._changes.updates.push(q.toJSON())});p.bind("destroy",function(q){k._changes.deletes.push(q.toJSON())});return p});k.records.reset(n);if(m.facets){var l=_.map(m.facets,function(o,p){o.id=p;return new i.Facet(o)});k.facets.reset(l)}},toTemplateJSON:function(){var k=this.toJSON();k.recordCount=this.recordCount;k.fields=this.fields.toJSON();return k},getFieldsSummary:function(){var l=this;var m=new i.Query();m.set({size:0});this.fields.each(function(n){m.addFacet(n.id)});var k=new g();this._store.query(m.toJSON(),this.toJSON()).done(function(n){if(n.facets){_.each(n.facets,function(o,q){o.id=q;var p=new i.Facet(o);l.fields.get(q).facets.reset(p)})}k.resolve(n)});return k.promise()},recordSummary:function(k){return k.summary()},_backendFromString:function(l){var k=null;if(recline&&recline.Backend){_.each(_.keys(recline.Backend),function(m){if(m.toLowerCase()===l.toLowerCase()){k=recline.Backend[m]}})}return k}});i.Record=Backbone.Model.extend({constructor:function h(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(k){var l=this.getFieldValueUnrendered(k);if(k&&!_.isUndefined(k.renderer)){l=k.renderer(l,k,this.toJSON())}return l},getFieldValueUnrendered:function(k){if(!k){return""}var l=this.get(k.id);if(k.deriver){l=k.deriver(l,k,this)}return l},summary:function(k){var l=this;var m='<div class="recline-record-summary">';this.fields.each(function(n){if(n.id!="id"){m+='<div class="'+n.id+'"><strong>'+n.get("label")+"</strong>: "+l.getFieldValue(n)+"</div>"}});m+="</div>";return m},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}});i.RecordList=Backbone.Collection.extend({constructor:function b(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:i.Record});i.Field=Backbone.Model.extend({constructor:function e(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:false},initialize:function(l,k){if("0" in l){throw new Error("Looks like you did not pass a proper hash with id to Field constructor")}if(this.attributes.label===null){this.set({label:this.id})}if(this.attributes.type.toLowerCase() in this._typeMap){this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]}if(k){this.renderer=k.renderer;this.deriver=k.deriver}if(!this.renderer){this.renderer=this.defaultRenderers[this.get("type")]}this.facets=new i.FacetList()},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(m,l,k){return JSON.stringify(m)},geo_point:function(m,l,k){return JSON.stringify(m)},number:function(n,m,l){var k=m.get("format");if(k==="percentage"){return n+"%"}return n},string:function(o,n,m){var l=n.get("format");if(l==="markdown"){if(typeof Showdown!=="undefined"){var k=new Showdown.converter();out=k.makeHtml(o);return out}else{return o}}else{if(l=="plain"){return o}else{if(o&&typeof o==="string"){o=o.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')}return o}}}}});i.FieldList=Backbone.Collection.extend({constructor:function f(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:i.Field});i.Query=Backbone.Model.extend({constructor:function c(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",from:"",to:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(k){var m=JSON.parse(JSON.stringify(k));if(_.keys(k).length<=3){m=_.defaults(m,this._filterTemplates[k.type])}var l=this.get("filters");l.push(m);this.trigger("change:filters:new-blank")},replaceFilter:function(l){var m=this.get("filters");var k=-1;_.each(this.get("filters"),function(p,n,o){if(l.field==p.field){k=n}});if(k>=0){m.splice(k,1);this.set({filters:m})}this.addFilter(l)},updateFilter:function(k,l){},removeFilter:function(l){var k=this.get("filters");k.splice(l,1);this.set({filters:k});this.trigger("change")},addFacet:function(l,m,k){var n=this.get("facets");if(_.contains(_.keys(n),l)){return}n[l]={terms:{field:l}};if(!_.isUndefined(m)){n[l].terms.size=m}this.set({facets:n},{silent:true});if(!k){this.trigger("facet:add",this)
}},addHistogramFacet:function(k){var l=this.get("facets");l[k]={date_histogram:{field:k,interval:"day"}};this.set({facets:l},{silent:true});this.trigger("facet:add",this)},removeFacet:function(k){var l=this.get("facets");if(!_.contains(_.keys(l),k)){return}delete l[k];this.set({facets:l},{silent:true});this.trigger("facet:remove",this)},clearFacets:function(){var k=this.get("facets");_.each(_.keys(k),function(l){delete k[l]});this.trigger("facet:remove",this)},refreshFacets:function(){this.trigger("facet:add",this)}});i.Facet=Backbone.Model.extend({constructor:function j(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}});i.FacetList=Backbone.Collection.extend({constructor:function d(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:i.Facet});i.ObjectState=Backbone.Model.extend({})}(this.recline.Model));this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.Flot=Backbone.View.extend({template:'     <div class="recline-flot">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(e){var d=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"];_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel");this.needToRedraw=false;this.listenTo(this.model,"change",this.render);this.listenTo(this.model.fields,"reset add",this.render);this.listenTo(this.model.records,"reset add",this.redraw);var c=_.extend({group:null,series:[],graphType:"lines-and-points"},e.state);this.state=new recline.Model.ObjectState(c);this.previousTooltipPoint={x:null,y:null};this.editor=new b.FlotControls({model:this.model,state:this.state.toJSON()});this.listenTo(this.editor.state,"change",function(){d.state.set(d.editor.state.toJSON());d.redraw()});this.elSidebar=this.editor.$el},render:function(){var c=this;var d=this.model.toTemplateJSON();var e=Mustache.render(this.template,d);this.$el.html(e);this.$graph=this.$el.find(".panel.graph");this.$graph.on("plothover",this._toolTip);return this},remove:function(){this.editor.remove();Backbone.View.prototype.remove.apply(this,arguments)},redraw:function(){var e=!jQuery.expr.filters.hidden(this.el);if((!e||this.model.records.length===0)){this.needToRedraw=true;return}if(this.state.get("group")&&this.state.get("series")){var d=this.createSeries();var c=this.getGraphOptions(this.state.attributes.graphType,d[0].data.length);this.plot=a.plot(this.$graph,d,c)}},show:function(){if(this.needToRedraw){this.redraw()}},_toolTip:function(f,j,e){if(e){if(this.previousTooltipPoint.x!==e.dataIndex||this.previousTooltipPoint.y!==e.seriesIndex){this.previousTooltipPoint.x=e.dataIndex;this.previousTooltipPoint.y=e.seriesIndex;a("#recline-flot-tooltip").remove();var c=e.datapoint[0].toFixed(2),i=e.datapoint[1].toFixed(2);if(this.state.attributes.graphType==="bars"){c=e.datapoint[1].toFixed(2),i=e.datapoint[0].toFixed(2)}var d=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(c),series:e.series.label,y:i});var g,h;if(this.state.attributes.graphType==="bars"){g=e.pageX+15;h=e.pageY-10}else{if(this.state.attributes.graphType==="columns"){g=e.pageX+15;h=e.pageY}else{g=e.pageX+10;h=e.pageY-20}}a('<div id="recline-flot-tooltip">'+d+"</div>").css({top:h,left:g}).appendTo("body").fadeIn(200)}}else{a("#recline-flot-tooltip").remove();this.previousTooltipPoint.x=null;this.previousTooltipPoint.y=null}},_xaxisLabel:function(c){if(this._groupFieldIsDateTime()){c=new Date(parseFloat(c)).toLocaleDateString()}else{if(this.xvaluesAreIndex){c=parseInt(c,10);c=this.model.records.models[c].get(this.state.attributes.group)}}return c},getGraphOptions:function(d,h){var p=this;var f=p._groupFieldIsDateTime();var k={};if(!f){k.tickFormatter=function(i){var q=p._xaxisLabel(i)||"";if(typeof q!=="string"){q=q.toString()}if(p.state.attributes.graphType!=="bars"&&q.length>10){q=q.slice(0,10)+"..."}return q}}if(this.xvaluesAreIndex){var o=Math.min(this.model.records.length,15);var m=this.model.records.length/o;var l=[];for(var e=0;e<o;e++){l.push(parseInt(e*m,10))}k.ticks=l}else{if(f){k.mode="time"}}var g={};g.autoscale=true;g.autoscaleMargin=0.02;var j={};j.position="ne";var c={};c.hoverable=true;c.clickable=true;c.borderColor="#aaaaaa";c.borderWidth=1;var n={lines:{legend:j,colors:this.graphColors,lines:{show:true},xaxis:k,yaxis:g,grid:c},points:{legend:j,colors:this.graphColors,points:{show:true,hitRadius:5},xaxis:k,yaxis:g,grid:c},"lines-and-points":{legend:j,colors:this.graphColors,points:{show:true,hitRadius:5},lines:{show:true},xaxis:k,yaxis:g,grid:c},bars:{legend:j,colors:this.graphColors,lines:{show:false},xaxis:g,yaxis:k,grid:c,bars:{show:true,horizontal:true,shadowSize:0,align:"center",barWidth:0.8}},columns:{legend:j,colors:this.graphColors,lines:{show:false},xaxis:k,yaxis:g,grid:c,bars:{show:true,horizontal:false,shadowSize:0,align:"center",barWidth:0.8}}};
if(p.state.get("graphOptions")){return _.extend(n[d],p.state.get("graphOptions"))}else{return n[d]}},_groupFieldIsDateTime:function(){var c=this.model.fields.get(this.state.attributes.group);var e=c.get("type");var d=(e==="date"||e==="date-time"||e==="time");return d},createSeries:function(){var d=this;d.xvaluesAreIndex=false;var e=[];var c=d.model.fields.get(d.state.attributes.group);var f=d._groupFieldIsDateTime();_.each(this.state.attributes.series,function(k){var j=[];var i=d.model.fields.get(k).get("label");if(f){var g=function(l){var m=moment(String(l));if(m.isValid()){l=m.toDate().getTime()}return l}}else{var h=_.map(d.model.records.models,function(m,l){return m.getFieldValueUnrendered(c)});if(_.all(h,function(l){return !isNaN(parseFloat(l))})){var g=function(l){return parseFloat(l)}}else{d.xvaluesAreIndex=true}}_.each(d.model.records.models,function(n,m){if(d.xvaluesAreIndex){var l=m}else{var l=g(n.getFieldValueUnrendered(c))}var p=d.model.fields.get(k);var o=n.getFieldValueUnrendered(p);if(d.state.attributes.graphType=="bars"){j.push([o,l])}else{j.push([l,o])}});e.push({data:j,label:i,hoverable:true})});return e}});b.FlotControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(d){var c=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"reset add",this.render);this.state=new recline.Model.ObjectState(d.state);this.render()},render:function(){var d=this;var e=this.model.toTemplateJSON();var f=Mustache.render(this.template,e);this.$el.html(f);if(this.state.get("graphType")){this._selectOption(".editor-type",this.state.get("graphType"))}if(this.state.get("group")){this._selectOption(".editor-group",this.state.get("group"))}var c=[""];if(this.state.get("series").length>0){c=this.state.get("series")}_.each(c,function(h,g){d.addSeries(g);d._selectOption(".editor-series.js-series-"+g,h)});return this},_selectOption:function(e,d){var c=this.$el.find(e+" select > option");if(c){c.each(function(f){if(this.value==d){a(this).attr("selected","selected");return false}})}},onEditorSubmit:function(i){var c=this.$el.find(".editor-group select");var h=this;var g=this.$el.find(".editor-series select");var f=g.map(function(){return a(this).val()});var d={series:a.makeArray(f),group:this.$el.find(".editor-group select").val(),graphType:this.$el.find(".editor-type select").val()};this.state.set(d)},addSeries:function(c){var e=_.extend({seriesIndex:c,seriesName:String.fromCharCode(c+64+1)},this.model.toTemplateJSON());var d=Mustache.render(this.templateSeriesEditor,e);this.$el.find(".editor-series-group").append(d);return this},_onAddSeries:function(c){c.preventDefault();this.addSeries(this.state.get("series").length)},removeSeries:function(d){d.preventDefault();var c=a(d.target);c.parent().parent().remove();this.onEditorSubmit()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};this.recline.View.Graph=this.recline.View.Flot;this.recline.View.GraphControls=this.recline.View.FlotControls;this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(d){var c=this;_.bindAll(this,"render","onHorizontalScroll");this.listenTo(this.model.records,"add reset remove",this.render);
this.tempState={};var e=_.extend({hiddenFields:[]},d.state);this.state=new recline.Model.ObjectState(e)},events:{},setColumnSort:function(c){var d=[{}];d[0][this.tempState.currentColumn]={order:c};this.model.query({sort:d})},hideColumn:function(){var c=this.state.get("hiddenFields");c.push(this.tempState.currentColumn);this.state.set({hiddenFields:c});this.state.trigger("change");this.render()},showColumn:function(d){var c=_.without(this.state.get("hiddenFields"),a(d.target).data("column"));this.state.set({hiddenFields:c});this.render()},onHorizontalScroll:function(d){var c=a(d.target).scrollLeft();this.$el.find(".recline-grid thead tr").scrollLeft(c)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var c=this;var d=this.model.toJSON();d.notEmpty=(this.fields.length>0);d.fields=this.fields.map(function(e){return e.toJSON()});d.lastHeaderWidth=this.scrollbarDimensions.width-2;return d},render:function(){var e=this;this.fields=new recline.Model.FieldList(this.model.fields.filter(function(j){return _.indexOf(e.state.get("hiddenFields"),j.id)==-1}));this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var d=this.fields.length;var i=e.$el.width()-20-10*d-this.scrollbarDimensions.width;var f=parseInt(Math.max(50,i/d),10);var h=Math.max(i-d*f,0);this.fields.each(function(k,j){if(j===0){k.set({width:f+h})}else{k.set({width:f})}});var g=Mustache.render(this.template,this.toTemplateJSON());this.$el.html(g);this.model.records.forEach(function(k){var j=a("<tr />");e.$el.find("tbody").append(j);var l=new b.GridRow({model:k,el:j,fields:e.fields});l.render()});var c=this.$el.find("tbody")[0];if(c.scrollHeight<=c.offsetHeight){this.$el.find("th.last-header").hide()}this.$el.find(".recline-grid").toggleClass("no-hidden",(e.state.get("hiddenFields").length===0));this.$el.find(".recline-grid tbody").scroll(this.onHorizontalScroll);return this},_scrollbarSize:function(){var c=a("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body");var d={width:c.width()-c[0].clientWidth+1,height:c.height()-c[0].clientHeight};c.remove();return d}});b.GridRow=Backbone.View.extend({initialize:function(c){_.bindAll(this,"render");this._fields=c.fields;this.listenTo(this.model,"change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var d=this;var e=this.model;var c=this._fields.map(function(f){return{field:f.id,width:f.get("width"),value:e.getFieldValue(f)}});return{id:this.id,cells:c}},render:function(){this.$el.attr("data-id",this.model.id);var c=Mustache.render(this.template,this.toTemplateJSON());this.$el.html(c);return this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(g){var d=this.$el.find(".data-table-cell-editor-editor");if(d.length>0){d.parents(".data-table-cell-value").html(d.text()).siblings(".data-table-cell-edit").removeClass("hidden")}a(g.target).addClass("hidden");var c=a(g.target).siblings(".data-table-cell-value");c.data("previousContents",c.text());var f=Mustache.render(this.cellEditorTemplate,{value:c.text()});c.html(f)},onEditorOK:function(j){var d=this;var c=a(j.target);var i=c.parents("tr").attr("data-id");var h=c.parents("td").attr("data-field");var g=c.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val();var f={};f[h]=g;this.model.set(f);
this.trigger("recline:flash",{message:"Updating row...",loader:true});this.model.save().then(function(e){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:true})})},onEditorCancel:function(d){var c=a(d.target).parents(".data-table-cell-value");c.html(c.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(e){var d=this;this.visible=true;this.mapReady=false;this.map=null;var c=_.extend({geomField:null,lonField:null,latField:null,autoZoom:true,cluster:false},e.state);this.state=new recline.Model.ObjectState(c);this._clusterOptions={zoomToBoundsOnClick:true,maxClusterRadius:80,singleMarkerMode:false,skipDuplicateAddTesting:true,animateAddingMarkers:false};this.listenTo(this.model.fields,"change",function(){d._setupGeometryField();d.render()});this.listenTo(this.model.records,"add",function(f){d.redraw("add",f)});this.listenTo(this.model.records,"change",function(f){d.redraw("remove",f);d.redraw("add",f)});this.listenTo(this.model.records,"remove",function(f){d.redraw("remove",f)});this.listenTo(this.model.records,"reset",function(){d.redraw("reset")});this.menu=new b.MapMenu({model:this.model,state:this.state.toJSON()});this.listenTo(this.menu.state,"change",function(){d.state.set(d.menu.state.toJSON());d.redraw()});this.listenTo(this.state,"change",function(){d.redraw()});this.elSidebar=this.menu.$el},infobox:function(c){var e="";for(var d in c.attributes){if(!(this.state.get("geomField")&&d==this.state.get("geomField"))){e+="<div><strong>"+d+"</strong>: "+c.attributes[d]+"</div>"}}return e},geoJsonLayerOptions:{pointToLayer:function(d,e){var c=new L.Marker(e);c.bindPopup(d.properties.popupContent);this.markers.addLayer(c);return c},onEachFeature:function(d,c){if(d.properties&&d.properties.popupContent){c.bindPopup(d.properties.popupContent)}}},render:function(){var c=this;var d=Mustache.render(this.template,this.model.toTemplateJSON());this.$el.html(d);this.$map=this.$el.find(".panel.map");this.redraw();return this},redraw:function(e,f){var c=this;e=e||"refresh";if(!c._geomReady()){c._setupGeometryField()}if(!c.mapReady){c._setupMap()}if(this._geomReady()&&this.mapReady){this.map.removeLayer(this.features);this.map.removeLayer(this.markers);var d=0;this.features.eachLayer(function(){d++});if(e=="refresh"||e=="reset"){this.features.clearLayers();this.map.removeLayer(this.markers);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this._add(this.model.records.models)}else{if(e=="add"&&f){this._add(f)}else{if(e=="remove"&&f){this._remove(f)}}}if(this.state.get("cluster")){this.map.addLayer(this.markers)}else{this.map.addLayer(this.features)}if(this.state.get("autoZoom")){if(this.visible){this._zoomToFeatures()}else{this._zoomPending=true}}}},show:function(){if(this.map){this.map.invalidateSize();if(this._zoomPending&&this.state.get("autoZoom")){this._zoomToFeatures();this._zoomPending=false}}this.visible=true},hide:function(){this.visible=false},_geomReady:function(){return Boolean(this.state.get("geomField")||(this.state.get("latField")&&this.state.get("lonField")))},_add:function(f){var c=this;if(!(f instanceof Array)){f=[f]}var d=0;var e=0;_.every(f,function(i){d+=1;var g=c._getGeometryFromRecord(i);if(typeof g==="undefined"||g===null){return true}else{if(g instanceof Object){g.properties={popupContent:c.infobox(i),cid:i.cid};try{c.features.addData(g)}catch(h){e+=1;var j="Wrong geometry value";if(h.message){j+=" ("+h.message+")"}if(e<=10){c.trigger("recline:flash",{message:j,category:"error"})}}}else{e+=1;if(e<=10){c.trigger("recline:flash",{message:"Wrong geometry value",category:"error"})}}}return true})},_remove:function(d){var c=this;if(!(d instanceof Array)){d=[d]}_.each(d,function(f){for(var e in c.features._layers){if(c.features._layers[e].feature.properties.cid==f.cid){c.features.removeLayer(c.features._layers[e])}}})},_parseCoordinateString:function(h){if(typeof(h)!="string"){return(parseFloat(h))}var g=h.split(/[^\.\d\w]+/);var f=0;var c=0;var d=[1,60,3600];var e;for(e=0;e<g.length;++e){if(isNaN(parseFloat(g[e]))){continue}f+=parseFloat(g[e])/d[c];c+=1}if(h.match(/[SW]/)){f=-1*f}return(f)},_getGeometryFromRecord:function(h){if(this.state.get("geomField")){var c=h.get(this.state.get("geomField"));if(typeof(c)==="string"){try{c=a.parseJSON(c)}catch(g){}}if(typeof(c)==="string"){c=c.replace("(","").replace(")","");var f=c.split(",");var d=this._parseCoordinateString(f[0]);var i=this._parseCoordinateString(f[1]);if(!isNaN(i)&&!isNaN(parseFloat(d))){return{type:"Point",coordinates:[i,d]}
}else{return null}}else{if(c&&_.isArray(c)){return{type:"Point",coordinates:[c[0],c[1]]}}else{if(c&&c.lat){return{type:"Point",coordinates:[c.lon||c.lng,c.lat]}}}}return c}else{if(this.state.get("lonField")&&this.state.get("latField")){var i=h.get(this.state.get("lonField"));var d=h.get(this.state.get("latField"));i=this._parseCoordinateString(i);d=this._parseCoordinateString(d);if(!isNaN(parseFloat(i))&&!isNaN(parseFloat(d))){return{type:"Point",coordinates:[i,d]}}}}return null},_setupGeometryField:function(){if(!this._geomReady()){this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)});this.menu.state.set(this.state.toJSON())}},_checkField:function(g){var f;var e=this.model.fields.pluck("id");for(var d=0;d<g.length;d++){for(var c=0;c<e.length;c++){if(e[c].toLowerCase()==g[d].toLowerCase()){return e[c]}}}return null},_zoomToFeatures:function(){var c=this.features.getBounds();if(c&&c.getNorthEast()&&c.getSouthWest()){this.map.fitBounds(c)}else{this.map.setView([0,0],2)}},_setupMap:function(){var c=this;this.map=new L.Map(this.$map.get(0));var e="//otile{s}-s.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png";var f='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="//developer.mapquest.com/content/osm/mq_logo.png">';var d=new L.TileLayer(e,{maxZoom:18,attribution:f,subdomains:"1234"});this.map.addLayer(d);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this);this.features=new L.GeoJSON(null,this.geoJsonLayerOptions);this.map.setView([0,0],2);this.mapReady=true},_selectOption:function(e,d){var c=a("."+e+" > select > option");if(c){c.each(function(f){if(this.value==d){a(this).attr("selected","selected");return false}})}}});b.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Latitude / Longitude fields</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON field</label>         </div>         <div class="editor-field-type-latlon">           <label>Latitude field</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Longitude field</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometry field (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Update</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Auto zoom to features</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Cluster markers</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(d){var c=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"change",this.render);this.state=new recline.Model.ObjectState(d.state);this.listenTo(this.state,"change",this.render);this.render()},render:function(){var c=this;var d=Mustache.render(this.template,this.model.toTemplateJSON());this.$el.html(d);if(this._geomReady()&&this.model.fields.length){if(this.state.get("geomField")){this._selectOption("editor-geom-field",this.state.get("geomField"));this.$el.find("#editor-field-type-geom").attr("checked","checked").change()}else{this._selectOption("editor-lon-field",this.state.get("lonField"));this._selectOption("editor-lat-field",this.state.get("latField"));this.$el.find("#editor-field-type-latlon").attr("checked","checked").change()
}}if(this.state.get("autoZoom")){this.$el.find("#editor-auto-zoom").attr("checked","checked")}else{this.$el.find("#editor-auto-zoom").removeAttr("checked")}if(this.state.get("cluster")){this.$el.find("#editor-cluster").attr("checked","checked")}else{this.$el.find("#editor-cluster").removeAttr("checked")}return this},_geomReady:function(){return Boolean(this.state.get("geomField")||(this.state.get("latField")&&this.state.get("lonField")))},onEditorSubmit:function(c){c.preventDefault();if(this.$el.find("#editor-field-type-geom").attr("checked")){this.state.set({geomField:this.$el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null})}else{this.state.set({geomField:null,lonField:this.$el.find(".editor-lon-field > select > option:selected").val(),latField:this.$el.find(".editor-lat-field > select > option:selected").val()})}return false},onFieldTypeChange:function(c){if(c.target.value=="geom"){this.$el.find(".editor-field-type-geom").show();this.$el.find(".editor-field-type-latlon").hide()}else{this.$el.find(".editor-field-type-geom").hide();this.$el.find(".editor-field-type-latlon").show()}},onAutoZoomChange:function(c){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(c){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(e,d){var c=this.$el.find("."+e+" > select > option");if(c){c.each(function(f){if(this.value==d){a(this).attr("selected","selected");return false}})}}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(b,c){c.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> records      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(e){var d=this;this._setupState(e.state);if(e.views){this.pageViews=e.views}else{this.pageViews=[{id:"grid",label:"Grid",view:new c.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new c.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new c.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new c.Timeline({model:this.model,state:this.state.get("view-timeline")})}]}if(e.sidebarViews){this.sidebarViews=e.sidebarViews}else{this.sidebarViews=[{id:"filterEditor",label:"Filters",view:new c.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new c.Fields({model:this.model})}]}this.render();this._bindStateChanges();this._bindFlashNotifications();if(this.state.get("readOnly")){this.setReadOnly()}if(this.state.get("currentView")){this.updateNav(this.state.get("currentView"))}else{this.updateNav(this.pageViews[0].id)}this._showHideSidebar();this.listenTo(this.model,"query:start",function(){d.notify({loader:true,persist:true})});this.listenTo(this.model,"query:done",function(){d.clearNotifications();d.$el.find(".doc-count").text(d.model.recordCount||"Unknown")});this.listenTo(this.model,"query:fail",function(f){d.clearNotifications();var g="";if(typeof(f)=="string"){g=f}else{if(typeof(f)=="object"){if(f.title){g=f.title+": "}if(f.message){g+=f.message}}else{g="There was an error querying the backend"}}d.notify({message:g,category:"error",persist:true})});this.model.queryState.set(d.state.get("query"),{silent:true})},setReadOnly:function(){this.$el.addClass("recline-read-only")},render:function(){var e=this.model.toTemplateJSON();e.views=this.pageViews;e.sidebarViews=this.sidebarViews;var f=Mustache.render(this.template,e);this.$el.html(f);var d=this.$el.find(".data-view-container");var g=this.$el.find(".data-view-sidebar");_.each(this.pageViews,function(i,h){i.view.render();if(i.view.redraw){i.view.redraw()}d.append(i.view.el);if(i.view.elSidebar){g.append(i.view.elSidebar)}});_.each(this.sidebarViews,function(h){this["$"+h.id]=h.view.$el;g.append(h.view.el)},this);this.pager=new recline.View.Pager({model:this.model});this.$el.find(".recline-results-info").after(this.pager.el);this.queryEditor=new recline.View.QueryEditor({model:this.model.queryState});this.$el.find(".query-editor-here").append(this.queryEditor.el)
},remove:function(){_.each(this.pageViews,function(d){d.view.remove()});_.each(this.sidebarViews,function(d){d.view.remove()});this.pager.remove();this.queryEditor.remove();Backbone.View.prototype.remove.apply(this,arguments)},_showHideSidebar:function(){var e=this.$el.find(".data-view-sidebar");var d=e.children().filter(function(){return b(this).css("display")!="none"}).length;if(d>0){e.show()}else{e.hide()}},updateNav:function(d){this.$el.find(".navigation a").removeClass("active");var e=this.$el.find('.navigation a[data-view="'+d+'"]');e.addClass("active");_.each(this.pageViews,function(g,f){if(g.id===d){g.view.$el.show();if(g.view.elSidebar){g.view.elSidebar.show()}}else{g.view.$el.hide();if(g.view.elSidebar){g.view.elSidebar.hide()}if(g.view.hide){g.view.hide()}}});this._showHideSidebar();_.each(this.pageViews,function(g,f){if(g.id===d){if(g.view.show){g.view.show()}}})},_onMenuClick:function(f){f.preventDefault();var d=b(f.target).attr("data-action");this["$"+d].toggle();this._showHideSidebar()},_onSwitchView:function(d){d.preventDefault();var f=b(d.target).attr("data-view");this.updateNav(f);this.state.set({currentView:f})},_setupState:function(g){var h=this;var f=c.parseHashQueryString();var i=f.reclineQuery;i=i?JSON.parse(i):h.model.queryState.toJSON();var e=f["view-graph"]||f.graph;e=e?JSON.parse(e):{};var d=_.extend({query:i,"view-graph":e,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:false},g);this.state=new recline.Model.ObjectState(d)},_bindStateChanges:function(){var d=this;this.listenTo(this.model.queryState,"change",function(){d.state.set({query:d.model.queryState.toJSON()})});_.each(this.pageViews,function(e){if(e.view.state&&e.view.state.bind){var f={};f["view-"+e.id]=e.view.state.toJSON();d.state.set(f);d.listenTo(e.view.state,"change",function(){var g={};g["view-"+e.id]=e.view.state.toJSON();d.state.set(g,{silent:true});d.state.trigger("change")})}})},_bindFlashNotifications:function(){var d=this;_.each(this.pageViews,function(e){d.listenTo(e.view,"recline:flash",function(f){d.notify(f)})})},notify:function(e){var d=_.extend({message:"Loading",category:"warning",loader:false},e);var f;if(d.loader){f='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>'}else{f='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>'}var g=b(Mustache.render(f,d));g=b(g).appendTo(b(".recline-data-explorer .alert-messages"));if(!e.persist){setTimeout(function(){b(g).fadeOut(1000,function(){b(this).remove()})},1000)}},clearNotifications:function(){var d=b(".recline-data-explorer .alert-messages .alert");d.fadeOut(1500,function(){b(this).remove()})}});c.MultiView.restore=function(f){var d;if(f.backend==="memory"){d={backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]}}else{d=_.extend({url:f.url,backend:f.backend},f.dataset)}var g=new recline.Model.Dataset(d);var e=new c.MultiView({model:g,state:f});return e};var a=/^([^?]+)(\?.*)?/;c.parseHashUrl=function(e){var d=a.exec(e);if(d===null){return{}}else{return{path:d[1],query:d[2]||""}}};c.parseQueryString=function(h){if(!h){return{}}var f={},i,j=function(d){return unescape(d.replace(/\+/g," "))},g=/([^&=]+)=?([^&]*)/g;if(h&&h.length&&h[0]==="?"){h=h.slice(1)}while(i=g.exec(h)){f[j(i[1])]=j(i[2])}return f};c.parseHashQueryString=function(){var d=c.parseHashUrl(window.location.hash).query;return c.parseQueryString(d)};c.composeQueryString=function(e){var f="?";var d=[];b.each(e,function(g,h){if(typeof(h)==="object"){h=JSON.stringify(h)}d.push(g+"="+encodeURIComponent(h))});f+=d.join("&");return f};c.getNewHashForQueryString=function(d){var e=c.composeQueryString(d);if(window.location.hash){return window.location.hash.split("?")[0].slice(1)+e}else{return e}};c.setHashQueryString=function(d){window.location.hash=c.getNewHashForQueryString(d)}})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.GridControl=Backbone.View.extend({className:"recline-row-add",template:'<h1><a href="#" class="recline-row-add btn">Add row</a></h1>',initialize:function(d){var c=this;_.bindAll(this,"render");this.state=new recline.Model.ObjectState();this.render()},render:function(){var c=this;this.$el.html(this.template)},events:{"click .recline-row-add":"addNewRow"},addNewRow:function(c){c.preventDefault();this.state.trigger("change")}});b.SlickGrid=Backbone.View.extend({initialize:function(d){var c=this;this.$el.addClass("recline-slickgrid");this.templates={deleterow:'<a href="#" class="recline-row-delete btn" title="Delete row">X</a>'};_.bindAll(this,"render","onRecordChanged");this.listenTo(this.model.records,"add remove reset",this.render);this.listenTo(this.model.records,"change",this.onRecordChanged);this.listenTo(this.model,"query:start",function(){c.notify({loader:true,persist:true})
});this.listenTo(this.model,"query:done",function(){c.clearNotifications()});this.listenTo(this.model,"query:fail",function(f){c.clearNotifications();var g="";if(typeof(f)=="string"){g=f}else{if(typeof(f)=="object"){if(f.title){g=f.title+": "}if(f.message){g+=f.message}}else{g="There was an error querying the backend"}}c.notify({message:g,category:"error",persist:true})});var e=_.extend({hiddenColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],columnsTitle:[],columnsToolTip:[],columnsEditor:[],options:{},fitColumns:false},d.state);this.state=new recline.Model.ObjectState(e);this._slickHandler=new Slick.EventHandler();if(this.state.get("gridOptions")&&this.state.get("gridOptions").enabledAddRow!=undefined&&this.state.get("gridOptions").enabledAddRow==true){this.editor=new b.GridControl();this.elSidebar=this.editor.$el;this.listenTo(this.editor.state,"change",function(){this.model.records.add(new recline.Model.Record())})}},onRecordChanged:function(c){if(!this.grid){return}var d=this.grid.getData().getModelRow(c);this.grid.invalidateRow(d);this.grid.getData().updateItem(c,d);this.grid.render()},render:function(){var q=this;var s=_.extend({enableCellNavigation:true,enableColumnReorder:true,explicitInitialization:true,syncColumnCellResize:true,forceFitColumns:this.state.get("fitColumns")},q.state.get("gridOptions"));var h=[];var o;if(!("defaultFormatter" in s||"formatterFactory" in s)){o=function(x,t,v,u,i){if(u.id=="del"){return q.templates.deleterow}var w=q.model.fields.get(u.id);if(w.renderer){return w.renderer(v,w,i)}else{return v}}}var c=function(i){return function(t){if(i.type=="date"&&isNaN(Date.parse(t))){return{valid:false,msg:"A date is required, check field field-date-format"}}else{return{valid:true,msg:null}}}};if(this.state.get("gridOptions")&&this.state.get("gridOptions").enableReOrderRow!=undefined&&this.state.get("gridOptions").enableReOrderRow==true){h.push({id:"#",name:"",width:22,behavior:"selectAndMove",selectable:false,resizable:false,cssClass:"recline-cell-reorder"})}if(this.state.get("gridOptions")&&this.state.get("gridOptions").enabledDelRow!=undefined&&this.state.get("gridOptions").enabledDelRow==true){h.push({id:"del",name:"",field:"del",sortable:true,width:38,formatter:o,validator:c})}_.each(this.model.fields.toJSON(),function(y){var u={id:y.id,name:y.label,field:y.id,sortable:true,minWidth:80,formatter:o,validator:c(y)};var t=_.find(q.state.get("columnsWidth"),function(z){return z.column===y.id});if(t){u.width=t.width}var i=_.find(q.state.get("columnsTitle"),function(z){return z.column===y.id});if(i){u.name=i.title}var w=_.find(q.state.get("columnsToolTip"),function(z){return z.column===y.id});if(w){u.toolTip=w.value}var v=_.find(q.state.get("columnsEditor"),function(z){return z.column===y.id});if(v){u.editor=v.editor}else{var x={string:Slick.Editors.LongText,integer:Slick.Editors.IntegerEditor,number:Slick.Editors.Text,date:Slick.Editors.Text,"boolean":Slick.Editors.YesNoSelectEditor};if(y.type in x){u.editor=x[y.type]}else{u.editor=Slick.Editors.LongText}}h.push(u)});var n=_.filter(h,function(i){return _.indexOf(q.state.get("hiddenColumns"),i.id)===-1});if(this.state.get("columnsOrder")&&this.state.get("columnsOrder").length>0){n=n.sort(function(t,i){return _.indexOf(q.state.get("columnsOrder"),t.id)>_.indexOf(q.state.get("columnsOrder"),i.id)?1:-1});h=h.sort(function(t,i){return _.indexOf(q.state.get("columnsOrder"),t.id)>_.indexOf(q.state.get("columnsOrder"),i.id)?1:-1})}var e=[];for(var m=h.length-1;m>=0;m--){if(_.indexOf(_.pluck(n,"id"),h[m].id)===-1){e.push(h.splice(m,1)[0])}}h=h.concat(e);function r(i){var t={};q.model.fields.each(function(v){var u="";if(!_.isUndefined(i.getFieldValueUnrendered(v))){u=i.getFieldValueUnrendered(v)}t[v.id]=u});return t}function k(){var t=[];var i=[];this.push=function(u,v){t.push(u);i.push(v)};this.getLength=function(){return i.length};this.getItem=function(u){return i[u]};this.getItemMetadata=function(u){return{}};this.getModel=function(u){return t[u]};this.getModelRow=function(u){return _.indexOf(t,u)};this.updateItem=function(u,v){i[v]=r(u);t[v]=u}}var l=new k();this.model.records.each(function(i){l.push(i,r(i))});this.grid=new Slick.Grid(this.el,l,n,s);var p=this.model.queryState.get("sort");if(p){var g=p[0].field;var d=p[0].order!=="desc";this.grid.setSortColumn(g,d)}q.grid.setSelectionModel(new Slick.RowSelectionModel());var f=new Slick.RowMoveManager({cancelEditOnDrag:true});f.onBeforeMoveRows.subscribe(function(v,u){for(var t=0;t<u.rows.length;t++){if(u.rows[t]==u.insertBefore||u.rows[t]==u.insertBefore-1){v.stopPropagation();return false}}return true});f.onMoveRows.subscribe(function(z,A){var t=[],u,B;var D=A.rows;var y=A.insertBefore;var x=q.model.records.toJSON();u=x.slice(0,y);B=x.slice(y,x.length);D.sort(function(E,i){return E-i});for(var w=0;w<D.length;w++){t.push(x[D[w]])}D.reverse();for(var w=0;w<D.length;w++){var C=D[w];if(C<y){u.splice(C,1)}else{B.splice(C-y,1)}}x=u.concat(t.concat(B));var v=[];for(var w=0;w<D.length;w++){v.push(u.length+w)
}q.model.records.reset(x)});if(this.state.get("gridOptions")&&this.state.get("gridOptions").enableReOrderRow!=undefined&&this.state.get("gridOptions").enableReOrderRow==true){q.grid.registerPlugin(f)}this._slickHandler.subscribe(this.grid.onSort,function(v,t){var i=(t.sortAsc)?"asc":"desc";var u=[{field:t.sortCol.field,order:i}];q.model.query({sort:u})});this._slickHandler.subscribe(this.grid.onColumnsReordered,function(t,i){q.state.set({columnsOrder:_.pluck(q.grid.getColumns(),"id")})});this.grid.onColumnsResized.subscribe(function(v,i){var t=i.grid.getColumns();var w=i.grid.getOptions().defaultColumnWidth;var u=[];_.each(t,function(x){if(x.width!=w){u.push({column:x.id,width:x.width})}});q.state.set({columnsWidth:u})});this._slickHandler.subscribe(this.grid.onCellChange,function(y,u){var w=u.grid;var t=l.getModel(u.row);var x=w.getColumns()[u.cell].id;var i={};i[x]=u.item[x];t.set(i)});this._slickHandler.subscribe(this.grid.onClick,function(v,u){try{v.preventDefault()}catch(v){}var i=0;if(q.state.get("gridOptions")&&q.state.get("gridOptions").enableReOrderRow!=undefined&&q.state.get("gridOptions").enableReOrderRow==true){i=1}if(u.cell==i&&q.state.get("gridOptions").enabledDelRow==true){var t=l.getModel(u.row);t.destroy()}});var j=new Slick.Controls.ColumnPicker(h,this.grid,_.extend(s,{state:this.state}));if(q.visible){q.grid.init();q.rendered=true}else{q.rendered=false}return this},remove:function(){this._slickHandler.unsubscribeAll();Backbone.View.prototype.remove.apply(this,arguments)},show:function(){if(!this.rendered){if(!this.grid){this.render()}this.grid.init();this.rendered=true}this.visible=true},hide:function(){this.visible=false},notify:function(d){var c=_.extend({message:"Loading",category:"warning",loader:true},d);var e;if(c.loader){e='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>'}else{e='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>'}var f=a(Mustache.render(e,c));f=a(f).appendTo(a(".controls"));if(!d.persist){setTimeout(function(){a(f).fadeOut(1000,function(){a(this).remove()})},1000)}},clearNotifications:function(){var c=a(".controls .alert");c.fadeOut(1500,function(){a(this).remove()})}})})(jQuery,recline.View);(function(b){function a(g,e,k){var d;var f;var h={fadeSpeed:250};function j(){e.onHeaderContextMenu.subscribe(c);k=b.extend({},h,k);d=b('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body);d.bind("mouseleave",function(l){b(this).fadeOut(k.fadeSpeed)});d.bind("click",i)}function c(n,l){n.preventDefault();d.empty();f=[];var p,o;for(var m=0;m<g.length;m++){p=b("<li />").appendTo(d);o=b('<input type="checkbox" />').data("column-id",g[m].id).attr("id","slick-column-vis-"+g[m].id);f.push(o);if(e.getColumnIndex(g[m].id)!==null){o.attr("checked","checked")}o.appendTo(p);b("<label />").text(g[m].name).attr("for","slick-column-vis-"+g[m].id).appendTo(p)}b("<li/>").addClass("divider").appendTo(d);p=b("<li />").data("option","autoresize").appendTo(d);o=b('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize");o.appendTo(p);b("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(p);if(e.getOptions().forceFitColumns){o.attr("checked","checked")}d.css("top",n.pageY-10).css("left",n.pageX-10).fadeIn(k.fadeSpeed)}function i(p){var o;if(b(p.target).data("option")==="autoresize"){var n;if(b(p.target).is("li")){o=b(p.target).find("input").first();n=!o.is(":checked");o.attr("checked",n)}else{n=p.target.checked}if(n){e.setOptions({forceFitColumns:true});e.autosizeColumns()}else{e.setOptions({forceFitColumns:false})}k.state.set({fitColumns:n});return}if((b(p.target).is("li")&&!b(p.target).hasClass("divider"))||b(p.target).is("input")){if(b(p.target).is("li")){o=b(p.target).find("input").first();o.attr("checked",!o.is(":checked"))}var m=[];var l=[];b.each(f,function(q,r){if(b(this).is(":checked")){m.push(g[q])}else{l.push(g[q].id)}});if(!m.length){b(p.target).attr("checked","checked");return}e.setColumns(m);k.state.set({hiddenColumns:l})}}j()}b.extend(true,window,{Slick:{Controls:{ColumnPicker:a}}})})(jQuery);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){if(typeof VMM!=="undefined"){VMM.debug=false}b.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(e){var d=this;this.timeline=new VMM.Timeline(this.elementId);this._timelineIsInitialized=false;this.listenTo(this.model.fields,"reset",function(){d._setupTemporalField()});this.listenTo(this.model.records,"all",function(){d.reloadData()});var c=_.extend({startField:null,endField:null,nonUSDates:false,timelineJSOptions:{}},e.state);
this.state=new recline.Model.ObjectState(c);this._setupTemporalField()},render:function(){var c={};var d=Mustache.render(this.template,c);this.$el.html(d);if(a(this.elementId).length>0){this._initTimeline()}},show:function(){if(this._timelineIsInitialized===false){this._initTimeline()}},_initTimeline:function(){var d=this._timelineJSON();var c=this.state.get("timelineJSOptions");c.id=this.elementId;this.timeline.init(c,d);this._timelineIsInitialized=true},reloadData:function(){if(this._timelineIsInitialized){var c=this._timelineJSON();this.timeline.reload(c)}},convertRecord:function(d,c){return this._convertRecord(d,c)},_convertRecord:function(e,c){var g=this._parseDate(e.get(this.state.get("startField")));var d=this._parseDate(e.get(this.state.get("endField")));if(g){var f={startDate:g,endDate:d,headline:String(e.get("title")||""),text:e.get("description")||e.summary()};return f}else{return null}},_timelineJSON:function(){var c=this;var e={timeline:{type:"default",headline:"",date:[]}};this.model.records.each(function(f){var g=c.convertRecord(f,c.fields);if(g){e.timeline.date.push(g)}});if(e.timeline.date.length===0){var d={startDate:"2000,1,1",headline:"No data to show!"};e.timeline.date.push(d)}return e},_parseDate:function(d){if(!d){return null}var c=a.trim(d);c=c.replace(/(\d)th/g,"$1");c=c.replace(/(\d)st/g,"$1");c=a.trim(c);if(c.match(/\d\d\d\d-\d\d-\d\d(T.*)?/)){c=c.replace(/-/g,",").replace("T",",").replace(":",",")}if(c.match(/\d\d-\d\d-\d\d.*/)){c=c.replace(/-/g,"/")}if(this.state.get("nonUSDates")){var e=c.match(/(\d\d)\/(\d\d)\/(\d\d.*)/);if(e){c=[e[2],e[1],e[3]].join("/")}}return c},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(c){var f=this.model.fields.pluck("id");for(var e=0;e<c.length;e++){for(var d=0;d<f.length;d++){if(f[d].toLowerCase()==c[e].toLowerCase()){return f[d]}}}return null}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(c){_.bindAll(this,"render");this.listenTo(this.model.facets,"all",this.render);this.listenTo(this.model.fields,"all",this.render);this.render()},render:function(){var c={fields:this.model.fields.toJSON()};c.facets=_.map(this.model.facets.toJSON(),function(e){if(e._type==="date_histogram"){e.entries=_.map(e.entries,function(f){f.term=new Date(f.time).toDateString();return f})}return e});var d=Mustache.render(this.template,c);this.$el.html(d);if(this.model.facets.length>0){this.$el.show()}else{this.$el.hide()}},onHide:function(c){c.preventDefault();this.$el.hide()},onFacetFilter:function(g){g.preventDefault();var c=a(g.target);var d=c.closest(".facet-summary").attr("data-facet");var f=c.attr("data-value");this.model.queryState.addFilter({type:"term",field:d,term:f});this.model.query()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',initialize:function(d){var c=this;_.bindAll(this,"render");this.listenTo(this.model.fields,"reset",function(e){c.model.fields.each(function(f){f.facets.unbind("all",c.render);f.facets.bind("all",c.render)});c.model.getFieldsSummary();
c.render()});this.$el.find(".collapse").collapse();this.render()},render:function(){var c=this;var d={fields:[]};this.model.fields.each(function(g){var f=g.toJSON();f.facets=g.facets.toJSON();d.fields.push(f)});var e=Mustache.render(this.template,d);this.$el.html(e)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <a href="#" class="js-add-filter">Add filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Value</option>             <option value="range">Range</option>             <option value="geo_distance">Geo distance</option>           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{from}}" name="from" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{to}}" name="to" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.fields,"all",this.render);this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render);this.render()},render:function(){var c=this;var e=a.extend(true,{},this.model.queryState.toJSON());e.filters=_.map(e.filters,function(g,f){g.id=f;return g});e.fields=this.model.fields.toJSON();e.filterRender=function(){return Mustache.render(c.filterTemplates[this.type],this)};var d=Mustache.render(this.template,e);this.$el.html(d)},onAddFilterShow:function(d){d.preventDefault();var c=a(d.target);c.hide();this.$el.find("form.js-add").show()},onAddFilter:function(g){g.preventDefault();var c=a(g.target);c.hide();var d=c.find("select.filterType").val();var f=c.find("select.fields").val();this.model.queryState.addFilter({type:d,field:f})},onRemoveFilter:function(f){f.preventDefault();var c=a(f.target);var d=c.attr("data-filter-id");this.model.queryState.removeFilter(d)},onTermFiltersUpdate:function(g){var d=this;g.preventDefault();var f=d.model.queryState.get("filters");var c=a(g.target);_.each(c.find("input"),function(h){var m=a(h);var k=m.attr("data-filter-type");var e=m.attr("data-filter-field");var j=parseInt(m.attr("data-filter-id"),10);var i=m.attr("name");var l=m.val();
switch(k){case"term":f[j].term=l;break;case"range":f[j][i]=l;break;case"geo_distance":if(i==="distance"){f[j].distance=parseFloat(l)}else{f[j].point[i]=parseFloat(l)}break}});d.model.queryState.set({filters:f,from:0});d.model.queryState.trigger("change")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><label for="from">From</label><a><input name="from" type="text" value="{{from}}" /> &ndash; <label for="to">To</label><input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.queryState,"change",this.render);this.render()},onFormSubmit:function(f){f.preventDefault();var c=parseInt(this.$el.find('input[name="from"]').val())-1;var g=parseInt(this.$el.find('input[name="to"]').val())-1;var d=this.model.recordCount-1;if(this.model.queryState.get("from")!=c){this.model.queryState.set({from:Math.min(d,Math.max(c,0))})}else{if(this.model.queryState.get("to")!=g){var h=Math.min(d,Math.max(g,0));this.model.queryState.set({size:Math.min(d+1,Math.max(h-c+1,1))})}}},onPaginationUpdate:function(i){i.preventDefault();var g=a(i.target);var h=0;var f=this.model.queryState.get("from");var d=this.model.queryState.get("size");var c=false;if(g.parent().hasClass("prev")){h=Math.max(f-Math.max(0,d),0);c=h!=f}else{h=Math.max(f+d,0);c=(h<this.model.recordCount)}if(c){this.model.queryState.set({from:h})}},render:function(){var c=this.model.toJSON();var e=parseInt(this.model.queryState.get("from"));c.from=e+1;c.to=Math.min(e+this.model.queryState.get("size"),this.model.recordCount);var d=Mustache.render(this.template,c);this.$el.html(d);return this}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <label>Search</label><input type="text" name="q" value="{{q}}" class="span2" placeholder="Search data ..." class="search-query" />       </div>       <button type="submit" class="btn">Go &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model,"change",this.render);this.render()},onFormSubmit:function(d){d.preventDefault();var c=this.$el.find(".text-query input").val();this.model.set({q:c})},render:function(){var c=this.model.toJSON();var d=Mustache.render(this.template,c);this.$el.html(d)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(a,b){b.ValueFilter=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <button class="btn js-add-filter add-filter">Add filter</button>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn update-filter">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           {{field}}           <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.fields,"all",this.render);this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render);this.render()},render:function(){var c=this;var e=a.extend(true,{},this.model.queryState.toJSON());e.filters=_.map(e.filters,function(g,f){g.id=f;return g});e.fields=this.model.fields.toJSON();e.filterRender=function(){return Mustache.render(c.filterTemplates.term,this)
};var d=Mustache.render(this.template,e);this.$el.html(d)},updateFilter:function(d){var c=this;var f=c.model.queryState.get("filters");var h=a(d);var e=parseInt(h.attr("data-filter-id"),10);var g=h.val();f[e].term=g},onAddFilterShow:function(d){d.preventDefault();var c=a(d.target);c.hide();this.$el.find("form.js-add").show()},onAddFilter:function(f){f.preventDefault();var c=a(f.target);c.hide();var d=c.find("select.fields").val();this.model.queryState.addFilter({type:"term",field:d})},onRemoveFilter:function(f){f.preventDefault();var c=a(f.target);var d=c.attr("data-filter-id");this.model.queryState.removeFilter(d)},onTermFiltersUpdate:function(g){var d=this;g.preventDefault();var f=d.model.queryState.get("filters");var c=a(g.target);_.each(c.find("input"),function(e){d.updateFilter(e)});d.model.queryState.set({filters:f,from:0});d.model.queryState.trigger("change")}})})(jQuery,recline.View);